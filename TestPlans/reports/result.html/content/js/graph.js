/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "maxY": 15395.0, "series": [{"data": [[0.0, 14.0], [0.1, 46.0], [0.2, 46.0], [0.3, 46.0], [0.4, 47.0], [0.5, 47.0], [0.6, 47.0], [0.7, 47.0], [0.8, 47.0], [0.9, 47.0], [1.0, 47.0], [1.1, 47.0], [1.2, 48.0], [1.3, 48.0], [1.4, 48.0], [1.5, 48.0], [1.6, 48.0], [1.7, 48.0], [1.8, 48.0], [1.9, 48.0], [2.0, 48.0], [2.1, 48.0], [2.2, 48.0], [2.3, 48.0], [2.4, 48.0], [2.5, 48.0], [2.6, 48.0], [2.7, 48.0], [2.8, 48.0], [2.9, 49.0], [3.0, 49.0], [3.1, 49.0], [3.2, 49.0], [3.3, 49.0], [3.4, 49.0], [3.5, 49.0], [3.6, 49.0], [3.7, 49.0], [3.8, 49.0], [3.9, 49.0], [4.0, 49.0], [4.1, 49.0], [4.2, 49.0], [4.3, 49.0], [4.4, 49.0], [4.5, 49.0], [4.6, 49.0], [4.7, 49.0], [4.8, 49.0], [4.9, 49.0], [5.0, 49.0], [5.1, 49.0], [5.2, 49.0], [5.3, 49.0], [5.4, 49.0], [5.5, 49.0], [5.6, 49.0], [5.7, 49.0], [5.8, 50.0], [5.9, 50.0], [6.0, 50.0], [6.1, 50.0], [6.2, 50.0], [6.3, 50.0], [6.4, 50.0], [6.5, 50.0], [6.6, 50.0], [6.7, 50.0], [6.8, 50.0], [6.9, 50.0], [7.0, 50.0], [7.1, 50.0], [7.2, 50.0], [7.3, 50.0], [7.4, 50.0], [7.5, 50.0], [7.6, 50.0], [7.7, 50.0], [7.8, 50.0], [7.9, 50.0], [8.0, 50.0], [8.1, 50.0], [8.2, 50.0], [8.3, 50.0], [8.4, 50.0], [8.5, 50.0], [8.6, 50.0], [8.7, 50.0], [8.8, 50.0], [8.9, 50.0], [9.0, 50.0], [9.1, 50.0], [9.2, 50.0], [9.3, 50.0], [9.4, 50.0], [9.5, 50.0], [9.6, 50.0], [9.7, 50.0], [9.8, 50.0], [9.9, 51.0], [10.0, 51.0], [10.1, 51.0], [10.2, 51.0], [10.3, 51.0], [10.4, 51.0], [10.5, 51.0], [10.6, 51.0], [10.7, 51.0], [10.8, 51.0], [10.9, 51.0], [11.0, 51.0], [11.1, 51.0], [11.2, 51.0], [11.3, 51.0], [11.4, 51.0], [11.5, 51.0], [11.6, 51.0], [11.7, 51.0], [11.8, 51.0], [11.9, 51.0], [12.0, 51.0], [12.1, 51.0], [12.2, 51.0], [12.3, 51.0], [12.4, 51.0], [12.5, 51.0], [12.6, 51.0], [12.7, 51.0], [12.8, 51.0], [12.9, 51.0], [13.0, 51.0], [13.1, 51.0], [13.2, 51.0], [13.3, 51.0], [13.4, 51.0], [13.5, 51.0], [13.6, 51.0], [13.7, 51.0], [13.8, 51.0], [13.9, 51.0], [14.0, 51.0], [14.1, 51.0], [14.2, 51.0], [14.3, 51.0], [14.4, 52.0], [14.5, 52.0], [14.6, 52.0], [14.7, 52.0], [14.8, 52.0], [14.9, 52.0], [15.0, 52.0], [15.1, 52.0], [15.2, 52.0], [15.3, 52.0], [15.4, 52.0], [15.5, 52.0], [15.6, 52.0], [15.7, 52.0], [15.8, 52.0], [15.9, 52.0], [16.0, 52.0], [16.1, 52.0], [16.2, 52.0], [16.3, 52.0], [16.4, 52.0], [16.5, 52.0], [16.6, 52.0], [16.7, 52.0], [16.8, 52.0], [16.9, 52.0], [17.0, 52.0], [17.1, 52.0], [17.2, 52.0], [17.3, 52.0], [17.4, 52.0], [17.5, 52.0], [17.6, 52.0], [17.7, 52.0], [17.8, 52.0], [17.9, 52.0], [18.0, 52.0], [18.1, 52.0], [18.2, 52.0], [18.3, 52.0], [18.4, 52.0], [18.5, 52.0], [18.6, 52.0], [18.7, 52.0], [18.8, 53.0], [18.9, 53.0], [19.0, 53.0], [19.1, 53.0], [19.2, 53.0], [19.3, 53.0], [19.4, 53.0], [19.5, 53.0], [19.6, 53.0], [19.7, 53.0], [19.8, 53.0], [19.9, 53.0], [20.0, 53.0], [20.1, 53.0], [20.2, 53.0], [20.3, 53.0], [20.4, 53.0], [20.5, 53.0], [20.6, 53.0], [20.7, 53.0], [20.8, 53.0], [20.9, 53.0], [21.0, 53.0], [21.1, 53.0], [21.2, 53.0], [21.3, 53.0], [21.4, 53.0], [21.5, 53.0], [21.6, 53.0], [21.7, 53.0], [21.8, 53.0], [21.9, 53.0], [22.0, 53.0], [22.1, 53.0], [22.2, 53.0], [22.3, 53.0], [22.4, 53.0], [22.5, 53.0], [22.6, 53.0], [22.7, 54.0], [22.8, 54.0], [22.9, 54.0], [23.0, 54.0], [23.1, 54.0], [23.2, 54.0], [23.3, 54.0], [23.4, 54.0], [23.5, 54.0], [23.6, 54.0], [23.7, 54.0], [23.8, 54.0], [23.9, 54.0], [24.0, 54.0], [24.1, 54.0], [24.2, 54.0], [24.3, 54.0], [24.4, 54.0], [24.5, 54.0], [24.6, 54.0], [24.7, 54.0], [24.8, 54.0], [24.9, 54.0], [25.0, 54.0], [25.1, 54.0], [25.2, 54.0], [25.3, 54.0], [25.4, 54.0], [25.5, 54.0], [25.6, 54.0], [25.7, 54.0], [25.8, 54.0], [25.9, 54.0], [26.0, 55.0], [26.1, 55.0], [26.2, 55.0], [26.3, 55.0], [26.4, 55.0], [26.5, 55.0], [26.6, 55.0], [26.7, 55.0], [26.8, 55.0], [26.9, 55.0], [27.0, 55.0], [27.1, 55.0], [27.2, 55.0], [27.3, 55.0], [27.4, 55.0], [27.5, 55.0], [27.6, 55.0], [27.7, 55.0], [27.8, 55.0], [27.9, 55.0], [28.0, 55.0], [28.1, 55.0], [28.2, 55.0], [28.3, 55.0], [28.4, 55.0], [28.5, 55.0], [28.6, 55.0], [28.7, 55.0], [28.8, 55.0], [28.9, 55.0], [29.0, 55.0], [29.1, 56.0], [29.2, 56.0], [29.3, 56.0], [29.4, 56.0], [29.5, 56.0], [29.6, 56.0], [29.7, 56.0], [29.8, 56.0], [29.9, 56.0], [30.0, 56.0], [30.1, 56.0], [30.2, 56.0], [30.3, 56.0], [30.4, 56.0], [30.5, 56.0], [30.6, 56.0], [30.7, 56.0], [30.8, 56.0], [30.9, 56.0], [31.0, 56.0], [31.1, 56.0], [31.2, 56.0], [31.3, 56.0], [31.4, 56.0], [31.5, 57.0], [31.6, 57.0], [31.7, 57.0], [31.8, 57.0], [31.9, 57.0], [32.0, 57.0], [32.1, 57.0], [32.2, 57.0], [32.3, 57.0], [32.4, 57.0], [32.5, 57.0], [32.6, 57.0], [32.7, 57.0], [32.8, 57.0], [32.9, 57.0], [33.0, 57.0], [33.1, 57.0], [33.2, 57.0], [33.3, 57.0], [33.4, 57.0], [33.5, 57.0], [33.6, 57.0], [33.7, 58.0], [33.8, 58.0], [33.9, 58.0], [34.0, 58.0], [34.1, 58.0], [34.2, 58.0], [34.3, 58.0], [34.4, 58.0], [34.5, 58.0], [34.6, 58.0], [34.7, 58.0], [34.8, 58.0], [34.9, 58.0], [35.0, 58.0], [35.1, 58.0], [35.2, 58.0], [35.3, 58.0], [35.4, 58.0], [35.5, 59.0], [35.6, 59.0], [35.7, 59.0], [35.8, 59.0], [35.9, 59.0], [36.0, 59.0], [36.1, 59.0], [36.2, 59.0], [36.3, 59.0], [36.4, 59.0], [36.5, 59.0], [36.6, 59.0], [36.7, 59.0], [36.8, 59.0], [36.9, 59.0], [37.0, 60.0], [37.1, 60.0], [37.2, 60.0], [37.3, 60.0], [37.4, 60.0], [37.5, 60.0], [37.6, 60.0], [37.7, 60.0], [37.8, 60.0], [37.9, 60.0], [38.0, 60.0], [38.1, 60.0], [38.2, 60.0], [38.3, 60.0], [38.4, 61.0], [38.5, 61.0], [38.6, 61.0], [38.7, 61.0], [38.8, 61.0], [38.9, 61.0], [39.0, 61.0], [39.1, 61.0], [39.2, 61.0], [39.3, 61.0], [39.4, 61.0], [39.5, 62.0], [39.6, 62.0], [39.7, 62.0], [39.8, 62.0], [39.9, 62.0], [40.0, 62.0], [40.1, 62.0], [40.2, 62.0], [40.3, 62.0], [40.4, 62.0], [40.5, 63.0], [40.6, 63.0], [40.7, 63.0], [40.8, 63.0], [40.9, 63.0], [41.0, 63.0], [41.1, 63.0], [41.2, 63.0], [41.3, 63.0], [41.4, 64.0], [41.5, 64.0], [41.6, 64.0], [41.7, 64.0], [41.8, 64.0], [41.9, 64.0], [42.0, 64.0], [42.1, 65.0], [42.2, 65.0], [42.3, 65.0], [42.4, 65.0], [42.5, 65.0], [42.6, 65.0], [42.7, 65.0], [42.8, 66.0], [42.9, 66.0], [43.0, 66.0], [43.1, 66.0], [43.2, 66.0], [43.3, 66.0], [43.4, 67.0], [43.5, 67.0], [43.6, 67.0], [43.7, 67.0], [43.8, 67.0], [43.9, 67.0], [44.0, 68.0], [44.1, 68.0], [44.2, 68.0], [44.3, 68.0], [44.4, 68.0], [44.5, 69.0], [44.6, 69.0], [44.7, 69.0], [44.8, 69.0], [44.9, 70.0], [45.0, 70.0], [45.1, 70.0], [45.2, 70.0], [45.3, 71.0], [45.4, 71.0], [45.5, 71.0], [45.6, 71.0], [45.7, 72.0], [45.8, 72.0], [45.9, 72.0], [46.0, 73.0], [46.1, 73.0], [46.2, 73.0], [46.3, 74.0], [46.4, 74.0], [46.5, 74.0], [46.6, 75.0], [46.7, 75.0], [46.8, 76.0], [46.9, 76.0], [47.0, 77.0], [47.1, 77.0], [47.2, 78.0], [47.3, 78.0], [47.4, 79.0], [47.5, 79.0], [47.6, 80.0], [47.7, 80.0], [47.8, 81.0], [47.9, 82.0], [48.0, 82.0], [48.1, 83.0], [48.2, 84.0], [48.3, 84.0], [48.4, 85.0], [48.5, 86.0], [48.6, 86.0], [48.7, 87.0], [48.8, 88.0], [48.9, 89.0], [49.0, 90.0], [49.1, 90.0], [49.2, 91.0], [49.3, 92.0], [49.4, 93.0], [49.5, 94.0], [49.6, 95.0], [49.7, 96.0], [49.8, 97.0], [49.9, 98.0], [50.0, 100.0], [50.1, 101.0], [50.2, 102.0], [50.3, 103.0], [50.4, 105.0], [50.5, 106.0], [50.6, 107.0], [50.7, 109.0], [50.8, 110.0], [50.9, 111.0], [51.0, 113.0], [51.1, 114.0], [51.2, 116.0], [51.3, 117.0], [51.4, 119.0], [51.5, 120.0], [51.6, 122.0], [51.7, 124.0], [51.8, 126.0], [51.9, 128.0], [52.0, 130.0], [52.1, 132.0], [52.2, 134.0], [52.3, 137.0], [52.4, 139.0], [52.5, 141.0], [52.6, 143.0], [52.7, 145.0], [52.8, 147.0], [52.9, 150.0], [53.0, 152.0], [53.1, 155.0], [53.2, 158.0], [53.3, 160.0], [53.4, 163.0], [53.5, 165.0], [53.6, 167.0], [53.7, 169.0], [53.8, 171.0], [53.9, 173.0], [54.0, 175.0], [54.1, 176.0], [54.2, 178.0], [54.3, 179.0], [54.4, 181.0], [54.5, 183.0], [54.6, 184.0], [54.7, 186.0], [54.8, 187.0], [54.9, 188.0], [55.0, 190.0], [55.1, 191.0], [55.2, 193.0], [55.3, 194.0], [55.4, 195.0], [55.5, 197.0], [55.6, 198.0], [55.7, 199.0], [55.8, 201.0], [55.9, 202.0], [56.0, 203.0], [56.1, 204.0], [56.2, 206.0], [56.3, 207.0], [56.4, 208.0], [56.5, 209.0], [56.6, 210.0], [56.7, 211.0], [56.8, 212.0], [56.9, 213.0], [57.0, 214.0], [57.1, 215.0], [57.2, 216.0], [57.3, 217.0], [57.4, 218.0], [57.5, 219.0], [57.6, 220.0], [57.7, 221.0], [57.8, 222.0], [57.9, 223.0], [58.0, 224.0], [58.1, 225.0], [58.2, 226.0], [58.3, 227.0], [58.4, 228.0], [58.5, 229.0], [58.6, 230.0], [58.7, 231.0], [58.8, 232.0], [58.9, 233.0], [59.0, 234.0], [59.1, 235.0], [59.2, 236.0], [59.3, 238.0], [59.4, 239.0], [59.5, 240.0], [59.6, 241.0], [59.7, 242.0], [59.8, 243.0], [59.9, 244.0], [60.0, 245.0], [60.1, 246.0], [60.2, 247.0], [60.3, 248.0], [60.4, 249.0], [60.5, 250.0], [60.6, 251.0], [60.7, 252.0], [60.8, 254.0], [60.9, 255.0], [61.0, 256.0], [61.1, 257.0], [61.2, 258.0], [61.3, 259.0], [61.4, 260.0], [61.5, 262.0], [61.6, 263.0], [61.7, 264.0], [61.8, 265.0], [61.9, 266.0], [62.0, 267.0], [62.1, 268.0], [62.2, 270.0], [62.3, 271.0], [62.4, 272.0], [62.5, 273.0], [62.6, 274.0], [62.7, 276.0], [62.8, 277.0], [62.9, 279.0], [63.0, 280.0], [63.1, 282.0], [63.2, 283.0], [63.3, 285.0], [63.4, 287.0], [63.5, 288.0], [63.6, 290.0], [63.7, 291.0], [63.8, 293.0], [63.9, 295.0], [64.0, 297.0], [64.1, 298.0], [64.2, 300.0], [64.3, 302.0], [64.4, 304.0], [64.5, 306.0], [64.6, 308.0], [64.7, 310.0], [64.8, 311.0], [64.9, 313.0], [65.0, 315.0], [65.1, 316.0], [65.2, 318.0], [65.3, 320.0], [65.4, 321.0], [65.5, 323.0], [65.6, 325.0], [65.7, 327.0], [65.8, 329.0], [65.9, 331.0], [66.0, 332.0], [66.1, 334.0], [66.2, 336.0], [66.3, 337.0], [66.4, 339.0], [66.5, 340.0], [66.6, 342.0], [66.7, 344.0], [66.8, 345.0], [66.9, 347.0], [67.0, 349.0], [67.1, 350.0], [67.2, 351.0], [67.3, 353.0], [67.4, 355.0], [67.5, 356.0], [67.6, 359.0], [67.7, 361.0], [67.8, 362.0], [67.9, 364.0], [68.0, 365.0], [68.1, 367.0], [68.2, 369.0], [68.3, 372.0], [68.4, 374.0], [68.5, 376.0], [68.6, 378.0], [68.7, 380.0], [68.8, 382.0], [68.9, 385.0], [69.0, 387.0], [69.1, 390.0], [69.2, 393.0], [69.3, 395.0], [69.4, 397.0], [69.5, 400.0], [69.6, 403.0], [69.7, 405.0], [69.8, 407.0], [69.9, 410.0], [70.0, 413.0], [70.1, 415.0], [70.2, 417.0], [70.3, 420.0], [70.4, 422.0], [70.5, 425.0], [70.6, 428.0], [70.7, 430.0], [70.8, 433.0], [70.9, 435.0], [71.0, 438.0], [71.1, 441.0], [71.2, 444.0], [71.3, 447.0], [71.4, 450.0], [71.5, 452.0], [71.6, 454.0], [71.7, 457.0], [71.8, 460.0], [71.9, 462.0], [72.0, 465.0], [72.1, 467.0], [72.2, 469.0], [72.3, 472.0], [72.4, 474.0], [72.5, 477.0], [72.6, 479.0], [72.7, 482.0], [72.8, 485.0], [72.9, 487.0], [73.0, 490.0], [73.1, 493.0], [73.2, 496.0], [73.3, 499.0], [73.4, 502.0], [73.5, 505.0], [73.6, 508.0], [73.7, 511.0], [73.8, 514.0], [73.9, 516.0], [74.0, 520.0], [74.1, 523.0], [74.2, 525.0], [74.3, 528.0], [74.4, 531.0], [74.5, 534.0], [74.6, 537.0], [74.7, 540.0], [74.8, 544.0], [74.9, 547.0], [75.0, 549.0], [75.1, 553.0], [75.2, 557.0], [75.3, 560.0], [75.4, 563.0], [75.5, 566.0], [75.6, 570.0], [75.7, 573.0], [75.8, 575.0], [75.9, 578.0], [76.0, 581.0], [76.1, 584.0], [76.2, 588.0], [76.3, 591.0], [76.4, 595.0], [76.5, 599.0], [76.6, 604.0], [76.7, 608.0], [76.8, 614.0], [76.9, 620.0], [77.0, 626.0], [77.1, 631.0], [77.2, 636.0], [77.3, 641.0], [77.4, 645.0], [77.5, 650.0], [77.6, 656.0], [77.7, 661.0], [77.8, 668.0], [77.9, 677.0], [78.0, 687.0], [78.1, 694.0], [78.2, 703.0], [78.3, 713.0], [78.4, 719.0], [78.5, 728.0], [78.6, 735.0], [78.7, 742.0], [78.8, 747.0], [78.9, 753.0], [79.0, 758.0], [79.1, 766.0], [79.2, 771.0], [79.3, 777.0], [79.4, 781.0], [79.5, 786.0], [79.6, 789.0], [79.7, 792.0], [79.8, 795.0], [79.9, 798.0], [80.0, 801.0], [80.1, 806.0], [80.2, 809.0], [80.3, 813.0], [80.4, 817.0], [80.5, 821.0], [80.6, 825.0], [80.7, 828.0], [80.8, 831.0], [80.9, 834.0], [81.0, 837.0], [81.1, 839.0], [81.2, 842.0], [81.3, 845.0], [81.4, 849.0], [81.5, 851.0], [81.6, 855.0], [81.7, 858.0], [81.8, 862.0], [81.9, 866.0], [82.0, 870.0], [82.1, 876.0], [82.2, 881.0], [82.3, 886.0], [82.4, 891.0], [82.5, 897.0], [82.6, 903.0], [82.7, 910.0], [82.8, 917.0], [82.9, 923.0], [83.0, 928.0], [83.1, 932.0], [83.2, 936.0], [83.3, 943.0], [83.4, 951.0], [83.5, 956.0], [83.6, 960.0], [83.7, 964.0], [83.8, 968.0], [83.9, 971.0], [84.0, 974.0], [84.1, 977.0], [84.2, 979.0], [84.3, 981.0], [84.4, 983.0], [84.5, 985.0], [84.6, 988.0], [84.7, 990.0], [84.8, 992.0], [84.9, 994.0], [85.0, 996.0], [85.1, 998.0], [85.2, 1000.0], [85.3, 1003.0], [85.4, 1005.0], [85.5, 1007.0], [85.6, 1009.0], [85.7, 1011.0], [85.8, 1013.0], [85.9, 1016.0], [86.0, 1018.0], [86.1, 1020.0], [86.2, 1022.0], [86.3, 1025.0], [86.4, 1028.0], [86.5, 1030.0], [86.6, 1033.0], [86.7, 1036.0], [86.8, 1040.0], [86.9, 1043.0], [87.0, 1046.0], [87.1, 1051.0], [87.2, 1054.0], [87.3, 1057.0], [87.4, 1061.0], [87.5, 1064.0], [87.6, 1067.0], [87.7, 1069.0], [87.8, 1072.0], [87.9, 1075.0], [88.0, 1078.0], [88.1, 1081.0], [88.2, 1085.0], [88.3, 1089.0], [88.4, 1092.0], [88.5, 1095.0], [88.6, 1099.0], [88.7, 1102.0], [88.8, 1106.0], [88.9, 1110.0], [89.0, 1115.0], [89.1, 1120.0], [89.2, 1125.0], [89.3, 1128.0], [89.4, 1132.0], [89.5, 1135.0], [89.6, 1140.0], [89.7, 1145.0], [89.8, 1150.0], [89.9, 1155.0], [90.0, 1161.0], [90.1, 1167.0], [90.2, 1173.0], [90.3, 1180.0], [90.4, 1185.0], [90.5, 1190.0], [90.6, 1196.0], [90.7, 1202.0], [90.8, 1209.0], [90.9, 1219.0], [91.0, 1227.0], [91.1, 1232.0], [91.2, 1241.0], [91.3, 1250.0], [91.4, 1262.0], [91.5, 1273.0], [91.6, 1282.0], [91.7, 1292.0], [91.8, 1304.0], [91.9, 1318.0], [92.0, 1332.0], [92.1, 1340.0], [92.2, 1347.0], [92.3, 1354.0], [92.4, 1368.0], [92.5, 1388.0], [92.6, 1406.0], [92.7, 1429.0], [92.8, 1457.0], [92.9, 1488.0], [93.0, 1536.0], [93.1, 1550.0], [93.2, 1564.0], [93.3, 1603.0], [93.4, 1636.0], [93.5, 1677.0], [93.6, 1697.0], [93.7, 1717.0], [93.8, 1733.0], [93.9, 1748.0], [94.0, 1788.0], [94.1, 1833.0], [94.2, 1855.0], [94.3, 1870.0], [94.4, 1884.0], [94.5, 1904.0], [94.6, 1926.0], [94.7, 1939.0], [94.8, 1954.0], [94.9, 1964.0], [95.0, 1976.0], [95.1, 1988.0], [95.2, 2001.0], [95.3, 2030.0], [95.4, 2046.0], [95.5, 2054.0], [95.6, 2063.0], [95.7, 2074.0], [95.8, 2087.0], [95.9, 2101.0], [96.0, 2115.0], [96.1, 2123.0], [96.2, 2137.0], [96.3, 2149.0], [96.4, 2161.0], [96.5, 2178.0], [96.6, 2203.0], [96.7, 2221.0], [96.8, 2240.0], [96.9, 2253.0], [97.0, 2277.0], [97.1, 2303.0], [97.2, 2341.0], [97.3, 2393.0], [97.4, 2421.0], [97.5, 2445.0], [97.6, 2464.0], [97.7, 2494.0], [97.8, 2522.0], [97.9, 2539.0], [98.0, 2563.0], [98.1, 2585.0], [98.2, 2604.0], [98.3, 2626.0], [98.4, 2747.0], [98.5, 3029.0], [98.6, 3269.0], [98.7, 3361.0], [98.8, 3429.0], [98.9, 3604.0], [99.0, 3827.0], [99.1, 3906.0], [99.2, 4046.0], [99.3, 4166.0], [99.4, 4537.0], [99.5, 5022.0], [99.6, 5501.0], [99.7, 5664.0], [99.8, 5910.0], [99.9, 6182.0], [100.0, 9051.0]], "isOverall": false, "label": "Shorten Url", "isController": false}, {"data": [[0.0, 81.0], [0.1, 84.0], [0.2, 84.0], [0.3, 85.0], [0.4, 85.0], [0.5, 85.0], [0.6, 85.0], [0.7, 86.0], [0.8, 86.0], [0.9, 86.0], [1.0, 86.0], [1.1, 86.0], [1.2, 86.0], [1.3, 86.0], [1.4, 87.0], [1.5, 87.0], [1.6, 87.0], [1.7, 87.0], [1.8, 87.0], [1.9, 87.0], [2.0, 87.0], [2.1, 87.0], [2.2, 87.0], [2.3, 87.0], [2.4, 87.0], [2.5, 87.0], [2.6, 88.0], [2.7, 88.0], [2.8, 88.0], [2.9, 88.0], [3.0, 88.0], [3.1, 88.0], [3.2, 88.0], [3.3, 88.0], [3.4, 88.0], [3.5, 88.0], [3.6, 88.0], [3.7, 88.0], [3.8, 88.0], [3.9, 88.0], [4.0, 88.0], [4.1, 88.0], [4.2, 88.0], [4.3, 89.0], [4.4, 89.0], [4.5, 89.0], [4.6, 89.0], [4.7, 89.0], [4.8, 89.0], [4.9, 89.0], [5.0, 89.0], [5.1, 89.0], [5.2, 89.0], [5.3, 89.0], [5.4, 89.0], [5.5, 89.0], [5.6, 89.0], [5.7, 89.0], [5.8, 89.0], [5.9, 89.0], [6.0, 89.0], [6.1, 89.0], [6.2, 89.0], [6.3, 89.0], [6.4, 89.0], [6.5, 89.0], [6.6, 89.0], [6.7, 89.0], [6.8, 90.0], [6.9, 90.0], [7.0, 90.0], [7.1, 90.0], [7.2, 90.0], [7.3, 90.0], [7.4, 90.0], [7.5, 90.0], [7.6, 90.0], [7.7, 90.0], [7.8, 90.0], [7.9, 90.0], [8.0, 90.0], [8.1, 90.0], [8.2, 90.0], [8.3, 90.0], [8.4, 90.0], [8.5, 90.0], [8.6, 90.0], [8.7, 90.0], [8.8, 90.0], [8.9, 90.0], [9.0, 90.0], [9.1, 90.0], [9.2, 90.0], [9.3, 90.0], [9.4, 90.0], [9.5, 90.0], [9.6, 90.0], [9.7, 90.0], [9.8, 91.0], [9.9, 91.0], [10.0, 91.0], [10.1, 91.0], [10.2, 91.0], [10.3, 91.0], [10.4, 91.0], [10.5, 91.0], [10.6, 91.0], [10.7, 91.0], [10.8, 91.0], [10.9, 91.0], [11.0, 91.0], [11.1, 91.0], [11.2, 91.0], [11.3, 91.0], [11.4, 91.0], [11.5, 91.0], [11.6, 91.0], [11.7, 91.0], [11.8, 91.0], [11.9, 91.0], [12.0, 91.0], [12.1, 91.0], [12.2, 91.0], [12.3, 91.0], [12.4, 91.0], [12.5, 91.0], [12.6, 91.0], [12.7, 91.0], [12.8, 92.0], [12.9, 92.0], [13.0, 92.0], [13.1, 92.0], [13.2, 92.0], [13.3, 92.0], [13.4, 92.0], [13.5, 92.0], [13.6, 92.0], [13.7, 92.0], [13.8, 92.0], [13.9, 92.0], [14.0, 92.0], [14.1, 92.0], [14.2, 92.0], [14.3, 92.0], [14.4, 92.0], [14.5, 92.0], [14.6, 92.0], [14.7, 92.0], [14.8, 92.0], [14.9, 92.0], [15.0, 92.0], [15.1, 92.0], [15.2, 92.0], [15.3, 92.0], [15.4, 92.0], [15.5, 92.0], [15.6, 92.0], [15.7, 92.0], [15.8, 93.0], [15.9, 93.0], [16.0, 93.0], [16.1, 93.0], [16.2, 93.0], [16.3, 93.0], [16.4, 93.0], [16.5, 93.0], [16.6, 93.0], [16.7, 93.0], [16.8, 93.0], [16.9, 93.0], [17.0, 93.0], [17.1, 93.0], [17.2, 93.0], [17.3, 93.0], [17.4, 93.0], [17.5, 93.0], [17.6, 93.0], [17.7, 93.0], [17.8, 93.0], [17.9, 93.0], [18.0, 93.0], [18.1, 93.0], [18.2, 93.0], [18.3, 93.0], [18.4, 93.0], [18.5, 93.0], [18.6, 94.0], [18.7, 94.0], [18.8, 94.0], [18.9, 94.0], [19.0, 94.0], [19.1, 94.0], [19.2, 94.0], [19.3, 94.0], [19.4, 94.0], [19.5, 94.0], [19.6, 94.0], [19.7, 94.0], [19.8, 94.0], [19.9, 94.0], [20.0, 94.0], [20.1, 94.0], [20.2, 94.0], [20.3, 94.0], [20.4, 94.0], [20.5, 94.0], [20.6, 94.0], [20.7, 94.0], [20.8, 94.0], [20.9, 94.0], [21.0, 94.0], [21.1, 94.0], [21.2, 94.0], [21.3, 94.0], [21.4, 95.0], [21.5, 95.0], [21.6, 95.0], [21.7, 95.0], [21.8, 95.0], [21.9, 95.0], [22.0, 95.0], [22.1, 95.0], [22.2, 95.0], [22.3, 95.0], [22.4, 95.0], [22.5, 95.0], [22.6, 95.0], [22.7, 95.0], [22.8, 95.0], [22.9, 95.0], [23.0, 95.0], [23.1, 95.0], [23.2, 95.0], [23.3, 95.0], [23.4, 95.0], [23.5, 95.0], [23.6, 96.0], [23.7, 96.0], [23.8, 96.0], [23.9, 96.0], [24.0, 96.0], [24.1, 96.0], [24.2, 96.0], [24.3, 96.0], [24.4, 96.0], [24.5, 96.0], [24.6, 96.0], [24.7, 96.0], [24.8, 96.0], [24.9, 96.0], [25.0, 96.0], [25.1, 96.0], [25.2, 96.0], [25.3, 96.0], [25.4, 96.0], [25.5, 96.0], [25.6, 96.0], [25.7, 97.0], [25.8, 97.0], [25.9, 97.0], [26.0, 97.0], [26.1, 97.0], [26.2, 97.0], [26.3, 97.0], [26.4, 97.0], [26.5, 97.0], [26.6, 97.0], [26.7, 97.0], [26.8, 97.0], [26.9, 97.0], [27.0, 97.0], [27.1, 97.0], [27.2, 97.0], [27.3, 97.0], [27.4, 97.0], [27.5, 97.0], [27.6, 97.0], [27.7, 98.0], [27.8, 98.0], [27.9, 98.0], [28.0, 98.0], [28.1, 98.0], [28.2, 98.0], [28.3, 98.0], [28.4, 98.0], [28.5, 98.0], [28.6, 98.0], [28.7, 98.0], [28.8, 98.0], [28.9, 98.0], [29.0, 98.0], [29.1, 98.0], [29.2, 98.0], [29.3, 98.0], [29.4, 99.0], [29.5, 99.0], [29.6, 99.0], [29.7, 99.0], [29.8, 99.0], [29.9, 99.0], [30.0, 99.0], [30.1, 99.0], [30.2, 99.0], [30.3, 99.0], [30.4, 99.0], [30.5, 99.0], [30.6, 99.0], [30.7, 99.0], [30.8, 99.0], [30.9, 99.0], [31.0, 99.0], [31.1, 100.0], [31.2, 100.0], [31.3, 100.0], [31.4, 100.0], [31.5, 100.0], [31.6, 100.0], [31.7, 100.0], [31.8, 100.0], [31.9, 100.0], [32.0, 100.0], [32.1, 100.0], [32.2, 100.0], [32.3, 100.0], [32.4, 100.0], [32.5, 101.0], [32.6, 101.0], [32.7, 101.0], [32.8, 101.0], [32.9, 101.0], [33.0, 101.0], [33.1, 101.0], [33.2, 101.0], [33.3, 101.0], [33.4, 101.0], [33.5, 101.0], [33.6, 101.0], [33.7, 101.0], [33.8, 102.0], [33.9, 102.0], [34.0, 102.0], [34.1, 102.0], [34.2, 102.0], [34.3, 102.0], [34.4, 102.0], [34.5, 102.0], [34.6, 102.0], [34.7, 102.0], [34.8, 102.0], [34.9, 102.0], [35.0, 103.0], [35.1, 103.0], [35.2, 103.0], [35.3, 103.0], [35.4, 103.0], [35.5, 103.0], [35.6, 103.0], [35.7, 103.0], [35.8, 103.0], [35.9, 103.0], [36.0, 104.0], [36.1, 104.0], [36.2, 104.0], [36.3, 104.0], [36.4, 104.0], [36.5, 104.0], [36.6, 104.0], [36.7, 104.0], [36.8, 104.0], [36.9, 105.0], [37.0, 105.0], [37.1, 105.0], [37.2, 105.0], [37.3, 105.0], [37.4, 105.0], [37.5, 105.0], [37.6, 105.0], [37.7, 105.0], [37.8, 106.0], [37.9, 106.0], [38.0, 106.0], [38.1, 106.0], [38.2, 106.0], [38.3, 106.0], [38.4, 106.0], [38.5, 106.0], [38.6, 106.0], [38.7, 107.0], [38.8, 107.0], [38.9, 107.0], [39.0, 107.0], [39.1, 107.0], [39.2, 107.0], [39.3, 107.0], [39.4, 108.0], [39.5, 108.0], [39.6, 108.0], [39.7, 108.0], [39.8, 108.0], [39.9, 108.0], [40.0, 108.0], [40.1, 108.0], [40.2, 109.0], [40.3, 109.0], [40.4, 109.0], [40.5, 109.0], [40.6, 109.0], [40.7, 109.0], [40.8, 110.0], [40.9, 110.0], [41.0, 110.0], [41.1, 110.0], [41.2, 110.0], [41.3, 110.0], [41.4, 111.0], [41.5, 111.0], [41.6, 111.0], [41.7, 111.0], [41.8, 111.0], [41.9, 112.0], [42.0, 112.0], [42.1, 112.0], [42.2, 112.0], [42.3, 112.0], [42.4, 112.0], [42.5, 113.0], [42.6, 113.0], [42.7, 113.0], [42.8, 113.0], [42.9, 114.0], [43.0, 114.0], [43.1, 114.0], [43.2, 114.0], [43.3, 114.0], [43.4, 115.0], [43.5, 115.0], [43.6, 115.0], [43.7, 115.0], [43.8, 116.0], [43.9, 116.0], [44.0, 116.0], [44.1, 116.0], [44.2, 117.0], [44.3, 117.0], [44.4, 117.0], [44.5, 118.0], [44.6, 118.0], [44.7, 118.0], [44.8, 118.0], [44.9, 119.0], [45.0, 119.0], [45.1, 120.0], [45.2, 120.0], [45.3, 120.0], [45.4, 121.0], [45.5, 121.0], [45.6, 122.0], [45.7, 122.0], [45.8, 122.0], [45.9, 123.0], [46.0, 123.0], [46.1, 124.0], [46.2, 124.0], [46.3, 124.0], [46.4, 125.0], [46.5, 126.0], [46.6, 126.0], [46.7, 127.0], [46.8, 127.0], [46.9, 128.0], [47.0, 128.0], [47.1, 129.0], [47.2, 129.0], [47.3, 130.0], [47.4, 130.0], [47.5, 131.0], [47.6, 131.0], [47.7, 132.0], [47.8, 133.0], [47.9, 133.0], [48.0, 134.0], [48.1, 134.0], [48.2, 135.0], [48.3, 136.0], [48.4, 137.0], [48.5, 137.0], [48.6, 138.0], [48.7, 139.0], [48.8, 140.0], [48.9, 141.0], [49.0, 142.0], [49.1, 142.0], [49.2, 143.0], [49.3, 144.0], [49.4, 145.0], [49.5, 146.0], [49.6, 147.0], [49.7, 148.0], [49.8, 149.0], [49.9, 150.0], [50.0, 151.0], [50.1, 152.0], [50.2, 153.0], [50.3, 154.0], [50.4, 156.0], [50.5, 157.0], [50.6, 158.0], [50.7, 159.0], [50.8, 161.0], [50.9, 162.0], [51.0, 163.0], [51.1, 165.0], [51.2, 166.0], [51.3, 168.0], [51.4, 170.0], [51.5, 171.0], [51.6, 173.0], [51.7, 175.0], [51.8, 177.0], [51.9, 179.0], [52.0, 181.0], [52.1, 183.0], [52.2, 185.0], [52.3, 186.0], [52.4, 188.0], [52.5, 190.0], [52.6, 192.0], [52.7, 194.0], [52.8, 195.0], [52.9, 198.0], [53.0, 200.0], [53.1, 202.0], [53.2, 204.0], [53.3, 206.0], [53.4, 208.0], [53.5, 210.0], [53.6, 212.0], [53.7, 213.0], [53.8, 215.0], [53.9, 217.0], [54.0, 218.0], [54.1, 220.0], [54.2, 221.0], [54.3, 223.0], [54.4, 225.0], [54.5, 226.0], [54.6, 227.0], [54.7, 229.0], [54.8, 230.0], [54.9, 232.0], [55.0, 234.0], [55.1, 235.0], [55.2, 237.0], [55.3, 238.0], [55.4, 239.0], [55.5, 241.0], [55.6, 242.0], [55.7, 243.0], [55.8, 245.0], [55.9, 246.0], [56.0, 247.0], [56.1, 248.0], [56.2, 249.0], [56.3, 250.0], [56.4, 251.0], [56.5, 252.0], [56.6, 254.0], [56.7, 255.0], [56.8, 256.0], [56.9, 257.0], [57.0, 258.0], [57.1, 259.0], [57.2, 260.0], [57.3, 261.0], [57.4, 262.0], [57.5, 263.0], [57.6, 264.0], [57.7, 265.0], [57.8, 266.0], [57.9, 267.0], [58.0, 268.0], [58.1, 269.0], [58.2, 270.0], [58.3, 271.0], [58.4, 272.0], [58.5, 273.0], [58.6, 274.0], [58.7, 275.0], [58.8, 276.0], [58.9, 277.0], [59.0, 278.0], [59.1, 280.0], [59.2, 281.0], [59.3, 282.0], [59.4, 283.0], [59.5, 284.0], [59.6, 285.0], [59.7, 286.0], [59.8, 287.0], [59.9, 288.0], [60.0, 289.0], [60.1, 290.0], [60.2, 291.0], [60.3, 292.0], [60.4, 293.0], [60.5, 294.0], [60.6, 295.0], [60.7, 296.0], [60.8, 297.0], [60.9, 299.0], [61.0, 300.0], [61.1, 301.0], [61.2, 302.0], [61.3, 303.0], [61.4, 304.0], [61.5, 305.0], [61.6, 306.0], [61.7, 307.0], [61.8, 308.0], [61.9, 309.0], [62.0, 310.0], [62.1, 311.0], [62.2, 312.0], [62.3, 314.0], [62.4, 315.0], [62.5, 316.0], [62.6, 317.0], [62.7, 318.0], [62.8, 319.0], [62.9, 320.0], [63.0, 321.0], [63.1, 323.0], [63.2, 324.0], [63.3, 325.0], [63.4, 327.0], [63.5, 328.0], [63.6, 329.0], [63.7, 331.0], [63.8, 332.0], [63.9, 334.0], [64.0, 335.0], [64.1, 337.0], [64.2, 338.0], [64.3, 340.0], [64.4, 342.0], [64.5, 343.0], [64.6, 345.0], [64.7, 347.0], [64.8, 349.0], [64.9, 351.0], [65.0, 352.0], [65.1, 354.0], [65.2, 356.0], [65.3, 358.0], [65.4, 360.0], [65.5, 361.0], [65.6, 363.0], [65.7, 365.0], [65.8, 367.0], [65.9, 369.0], [66.0, 371.0], [66.1, 372.0], [66.2, 374.0], [66.3, 375.0], [66.4, 377.0], [66.5, 379.0], [66.6, 380.0], [66.7, 382.0], [66.8, 384.0], [66.9, 385.0], [67.0, 387.0], [67.1, 389.0], [67.2, 391.0], [67.3, 392.0], [67.4, 394.0], [67.5, 396.0], [67.6, 398.0], [67.7, 400.0], [67.8, 401.0], [67.9, 403.0], [68.0, 405.0], [68.1, 406.0], [68.2, 408.0], [68.3, 410.0], [68.4, 412.0], [68.5, 414.0], [68.6, 416.0], [68.7, 418.0], [68.8, 420.0], [68.9, 423.0], [69.0, 425.0], [69.1, 427.0], [69.2, 429.0], [69.3, 432.0], [69.4, 435.0], [69.5, 437.0], [69.6, 440.0], [69.7, 442.0], [69.8, 445.0], [69.9, 447.0], [70.0, 449.0], [70.1, 452.0], [70.2, 454.0], [70.3, 456.0], [70.4, 459.0], [70.5, 461.0], [70.6, 464.0], [70.7, 466.0], [70.8, 469.0], [70.9, 471.0], [71.0, 474.0], [71.1, 475.0], [71.2, 477.0], [71.3, 479.0], [71.4, 481.0], [71.5, 483.0], [71.6, 485.0], [71.7, 488.0], [71.8, 490.0], [71.9, 493.0], [72.0, 495.0], [72.1, 498.0], [72.2, 500.0], [72.3, 503.0], [72.4, 506.0], [72.5, 509.0], [72.6, 512.0], [72.7, 515.0], [72.8, 518.0], [72.9, 521.0], [73.0, 524.0], [73.1, 527.0], [73.2, 530.0], [73.3, 532.0], [73.4, 535.0], [73.5, 538.0], [73.6, 542.0], [73.7, 546.0], [73.8, 549.0], [73.9, 551.0], [74.0, 554.0], [74.1, 557.0], [74.2, 560.0], [74.3, 563.0], [74.4, 566.0], [74.5, 569.0], [74.6, 572.0], [74.7, 575.0], [74.8, 578.0], [74.9, 581.0], [75.0, 584.0], [75.1, 587.0], [75.2, 590.0], [75.3, 593.0], [75.4, 597.0], [75.5, 601.0], [75.6, 604.0], [75.7, 607.0], [75.8, 610.0], [75.9, 613.0], [76.0, 616.0], [76.1, 618.0], [76.2, 621.0], [76.3, 623.0], [76.4, 626.0], [76.5, 629.0], [76.6, 633.0], [76.7, 637.0], [76.8, 641.0], [76.9, 646.0], [77.0, 650.0], [77.1, 656.0], [77.2, 661.0], [77.3, 667.0], [77.4, 672.0], [77.5, 677.0], [77.6, 682.0], [77.7, 686.0], [77.8, 692.0], [77.9, 697.0], [78.0, 703.0], [78.1, 708.0], [78.2, 715.0], [78.3, 722.0], [78.4, 731.0], [78.5, 739.0], [78.6, 751.0], [78.7, 760.0], [78.8, 769.0], [78.9, 777.0], [79.0, 785.0], [79.1, 790.0], [79.2, 797.0], [79.3, 802.0], [79.4, 808.0], [79.5, 815.0], [79.6, 820.0], [79.7, 825.0], [79.8, 829.0], [79.9, 832.0], [80.0, 836.0], [80.1, 840.0], [80.2, 843.0], [80.3, 848.0], [80.4, 852.0], [80.5, 856.0], [80.6, 860.0], [80.7, 864.0], [80.8, 868.0], [80.9, 871.0], [81.0, 875.0], [81.1, 878.0], [81.2, 881.0], [81.3, 884.0], [81.4, 887.0], [81.5, 889.0], [81.6, 891.0], [81.7, 894.0], [81.8, 897.0], [81.9, 901.0], [82.0, 904.0], [82.1, 907.0], [82.2, 911.0], [82.3, 915.0], [82.4, 919.0], [82.5, 924.0], [82.6, 929.0], [82.7, 934.0], [82.8, 938.0], [82.9, 944.0], [83.0, 950.0], [83.1, 956.0], [83.2, 962.0], [83.3, 968.0], [83.4, 973.0], [83.5, 978.0], [83.6, 983.0], [83.7, 988.0], [83.8, 994.0], [83.9, 998.0], [84.0, 1003.0], [84.1, 1008.0], [84.2, 1011.0], [84.3, 1015.0], [84.4, 1019.0], [84.5, 1022.0], [84.6, 1025.0], [84.7, 1027.0], [84.8, 1030.0], [84.9, 1033.0], [85.0, 1036.0], [85.1, 1038.0], [85.2, 1041.0], [85.3, 1043.0], [85.4, 1045.0], [85.5, 1047.0], [85.6, 1049.0], [85.7, 1051.0], [85.8, 1053.0], [85.9, 1055.0], [86.0, 1057.0], [86.1, 1059.0], [86.2, 1061.0], [86.3, 1064.0], [86.4, 1066.0], [86.5, 1069.0], [86.6, 1072.0], [86.7, 1075.0], [86.8, 1077.0], [86.9, 1080.0], [87.0, 1083.0], [87.1, 1086.0], [87.2, 1090.0], [87.3, 1093.0], [87.4, 1096.0], [87.5, 1098.0], [87.6, 1102.0], [87.7, 1105.0], [87.8, 1108.0], [87.9, 1112.0], [88.0, 1114.0], [88.1, 1118.0], [88.2, 1121.0], [88.3, 1124.0], [88.4, 1129.0], [88.5, 1132.0], [88.6, 1137.0], [88.7, 1140.0], [88.8, 1144.0], [88.9, 1147.0], [89.0, 1152.0], [89.1, 1155.0], [89.2, 1159.0], [89.3, 1164.0], [89.4, 1168.0], [89.5, 1171.0], [89.6, 1174.0], [89.7, 1178.0], [89.8, 1182.0], [89.9, 1186.0], [90.0, 1191.0], [90.1, 1195.0], [90.2, 1200.0], [90.3, 1204.0], [90.4, 1209.0], [90.5, 1213.0], [90.6, 1219.0], [90.7, 1225.0], [90.8, 1231.0], [90.9, 1235.0], [91.0, 1239.0], [91.1, 1245.0], [91.2, 1251.0], [91.3, 1258.0], [91.4, 1265.0], [91.5, 1273.0], [91.6, 1280.0], [91.7, 1290.0], [91.8, 1300.0], [91.9, 1313.0], [92.0, 1321.0], [92.1, 1332.0], [92.2, 1341.0], [92.3, 1357.0], [92.4, 1371.0], [92.5, 1380.0], [92.6, 1387.0], [92.7, 1393.0], [92.8, 1401.0], [92.9, 1411.0], [93.0, 1423.0], [93.1, 1440.0], [93.2, 1459.0], [93.3, 1488.0], [93.4, 1519.0], [93.5, 1558.0], [93.6, 1587.0], [93.7, 1599.0], [93.8, 1614.0], [93.9, 1645.0], [94.0, 1674.0], [94.1, 1718.0], [94.2, 1754.0], [94.3, 1772.0], [94.4, 1786.0], [94.5, 1803.0], [94.6, 1839.0], [94.7, 1879.0], [94.8, 1901.0], [94.9, 1916.0], [95.0, 1930.0], [95.1, 1956.0], [95.2, 1979.0], [95.3, 1994.0], [95.4, 2005.0], [95.5, 2015.0], [95.6, 2027.0], [95.7, 2038.0], [95.8, 2061.0], [95.9, 2082.0], [96.0, 2094.0], [96.1, 2101.0], [96.2, 2111.0], [96.3, 2120.0], [96.4, 2133.0], [96.5, 2146.0], [96.6, 2157.0], [96.7, 2169.0], [96.8, 2182.0], [96.9, 2194.0], [97.0, 2203.0], [97.1, 2222.0], [97.2, 2249.0], [97.3, 2263.0], [97.4, 2280.0], [97.5, 2299.0], [97.6, 2316.0], [97.7, 2349.0], [97.8, 2386.0], [97.9, 2460.0], [98.0, 2496.0], [98.1, 2542.0], [98.2, 2580.0], [98.3, 2612.0], [98.4, 2641.0], [98.5, 2665.0], [98.6, 2792.0], [98.7, 3054.0], [98.8, 3333.0], [98.9, 3461.0], [99.0, 3670.0], [99.1, 3931.0], [99.2, 4086.0], [99.3, 4210.0], [99.4, 4846.0], [99.5, 5330.0], [99.6, 5624.0], [99.7, 5896.0], [99.8, 6028.0], [99.9, 6258.0], [100.0, 15395.0]], "isOverall": false, "label": "Resolve Short Url", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 31885.0, "series": [{"data": [[0.0, 31885.0], [600.0, 1052.0], [700.0, 1131.0], [800.0, 1660.0], [900.0, 1671.0], [1000.0, 2202.0], [1100.0, 1304.0], [1200.0, 707.0], [1300.0, 504.0], [1400.0, 234.0], [1500.0, 232.0], [1600.0, 208.0], [1700.0, 260.0], [1800.0, 294.0], [1900.0, 452.0], [2000.0, 442.0], [2100.0, 447.0], [2200.0, 314.0], [2300.0, 154.0], [2400.0, 256.0], [2500.0, 289.0], [2600.0, 123.0], [2700.0, 35.0], [2800.0, 27.0], [2900.0, 15.0], [3000.0, 21.0], [3100.0, 21.0], [3300.0, 76.0], [3200.0, 53.0], [3400.0, 67.0], [3500.0, 23.0], [3600.0, 28.0], [3700.0, 27.0], [3800.0, 69.0], [3900.0, 53.0], [4000.0, 45.0], [4100.0, 40.0], [4200.0, 18.0], [4300.0, 25.0], [4400.0, 12.0], [4500.0, 11.0], [4600.0, 8.0], [4700.0, 25.0], [4800.0, 13.0], [5100.0, 10.0], [4900.0, 6.0], [5000.0, 14.0], [5200.0, 11.0], [5300.0, 11.0], [5600.0, 34.0], [5500.0, 42.0], [5400.0, 21.0], [5700.0, 15.0], [5800.0, 35.0], [5900.0, 38.0], [6000.0, 13.0], [6100.0, 28.0], [6200.0, 48.0], [7700.0, 1.0], [8900.0, 1.0], [9000.0, 1.0], [100.0, 3639.0], [200.0, 5395.0], [300.0, 3385.0], [400.0, 2443.0], [500.0, 2050.0]], "isOverall": false, "label": "Shorten Url", "isController": false}, {"data": [[0.0, 19654.0], [600.0, 1567.0], [700.0, 831.0], [800.0, 1652.0], [900.0, 1312.0], [1000.0, 2283.0], [1100.0, 1682.0], [1200.0, 1014.0], [1300.0, 622.0], [1400.0, 358.0], [1500.0, 236.0], [1600.0, 220.0], [1700.0, 272.0], [1800.0, 194.0], [1900.0, 355.0], [2000.0, 458.0], [2100.0, 562.0], [2300.0, 196.0], [2200.0, 344.0], [2400.0, 125.0], [2500.0, 165.0], [2600.0, 173.0], [2700.0, 38.0], [2800.0, 21.0], [2900.0, 24.0], [3000.0, 25.0], [3100.0, 27.0], [3200.0, 23.0], [3300.0, 25.0], [3400.0, 60.0], [3500.0, 33.0], [3600.0, 19.0], [3700.0, 13.0], [3800.0, 18.0], [3900.0, 71.0], [4000.0, 33.0], [4100.0, 44.0], [4200.0, 13.0], [4300.0, 8.0], [4500.0, 7.0], [4400.0, 13.0], [4600.0, 8.0], [4800.0, 12.0], [4700.0, 12.0], [4900.0, 16.0], [5100.0, 11.0], [5000.0, 19.0], [5200.0, 9.0], [5300.0, 14.0], [5400.0, 24.0], [5600.0, 30.0], [5500.0, 17.0], [5800.0, 30.0], [5700.0, 17.0], [5900.0, 51.0], [6000.0, 27.0], [6100.0, 11.0], [6300.0, 17.0], [6200.0, 56.0], [6600.0, 1.0], [6400.0, 1.0], [7100.0, 1.0], [7500.0, 2.0], [7800.0, 2.0], [7900.0, 1.0], [8400.0, 1.0], [9000.0, 1.0], [9100.0, 1.0], [10000.0, 1.0], [9800.0, 1.0], [11600.0, 1.0], [12200.0, 1.0], [12400.0, 1.0], [12600.0, 1.0], [13300.0, 1.0], [13100.0, 1.0], [13000.0, 1.0], [12900.0, 1.0], [13700.0, 1.0], [14000.0, 1.0], [13900.0, 1.0], [14500.0, 1.0], [15300.0, 1.0], [100.0, 13920.0], [200.0, 5070.0], [300.0, 4251.0], [400.0, 2843.0], [500.0, 2087.0]], "isOverall": false, "label": "Resolve Short Url", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 15300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 92541.0, "series": [{"data": [[0.0, 92541.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 25866.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 8734.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 862.2507118288906, "minX": 1.68106458E12, "maxY": 991.5927300457588, "series": [{"data": [[1.68106458E12, 991.5927300457588], [1.68106464E12, 862.2507118288906]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68106464E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 45.0, "minX": 1.0, "maxY": 5907.0, "series": [{"data": [[3.0, 48.0], [5.0, 48.0], [7.0, 49.0], [9.0, 47.5], [11.0, 52.0], [14.0, 49.5], [15.0, 46.0], [16.0, 50.0], [20.0, 48.0], [21.0, 47.666666666666664], [22.0, 49.0], [23.0, 49.333333333333336], [24.0, 47.666666666666664], [25.0, 49.0], [28.0, 48.5], [29.0, 50.5], [30.0, 47.0], [31.0, 50.0], [32.0, 51.0], [35.0, 48.0], [34.0, 50.5], [37.0, 50.0], [36.0, 47.5], [39.0, 48.0], [41.0, 49.5], [40.0, 47.5], [42.0, 48.0], [45.0, 903.25], [49.0, 48.0], [48.0, 58.0], [51.0, 48.0], [50.0, 48.69230769230769], [53.0, 47.0], [52.0, 49.25], [55.0, 48.666666666666664], [54.0, 48.0], [56.0, 48.166666666666664], [59.0, 47.8], [58.0, 48.5], [60.0, 49.0], [63.0, 48.0], [67.0, 48.0], [66.0, 50.0], [65.0, 48.07692307692308], [64.0, 48.4], [71.0, 75.66666666666667], [70.0, 63.66666666666667], [69.0, 49.5], [68.0, 46.666666666666664], [75.0, 48.0], [74.0, 50.4], [73.0, 48.5], [72.0, 48.44444444444444], [79.0, 48.0], [77.0, 49.0], [76.0, 48.0], [83.0, 47.5], [82.0, 48.0], [81.0, 47.666666666666664], [80.0, 47.333333333333336], [87.0, 47.25], [86.0, 47.8], [85.0, 48.0], [84.0, 48.0], [91.0, 48.0], [90.0, 48.57142857142857], [89.0, 50.0], [88.0, 50.166666666666664], [95.0, 48.0], [94.0, 48.93333333333334], [93.0, 49.2], [92.0, 50.07142857142858], [99.0, 49.111111111111114], [98.0, 48.8], [97.0, 48.66666666666667], [96.0, 51.0], [103.0, 48.75], [102.0, 48.0], [101.0, 47.0], [100.0, 48.333333333333336], [107.0, 48.285714285714285], [106.0, 49.75], [105.0, 47.5], [104.0, 49.333333333333336], [111.0, 47.5], [110.0, 50.5], [109.0, 49.333333333333336], [108.0, 49.625], [114.0, 48.111111111111114], [112.0, 53.4], [119.0, 49.69230769230769], [118.0, 48.0], [116.0, 49.333333333333336], [123.0, 48.6], [122.0, 47.333333333333336], [121.0, 48.916666666666664], [120.0, 54.5], [127.0, 47.142857142857146], [126.0, 48.25], [124.0, 50.5], [135.0, 49.0], [134.0, 48.0], [133.0, 50.0], [132.0, 52.0], [131.0, 47.8], [130.0, 54.08333333333333], [129.0, 49.77777777777777], [128.0, 49.125], [143.0, 48.42857142857143], [141.0, 48.4], [140.0, 49.0], [139.0, 49.5], [138.0, 65.84615384615384], [137.0, 71.0], [136.0, 48.0], [151.0, 60.64285714285713], [150.0, 48.0], [149.0, 48.8], [148.0, 48.72222222222223], [147.0, 55.6], [146.0, 49.81818181818182], [145.0, 49.666666666666664], [144.0, 46.0], [158.0, 48.666666666666664], [157.0, 47.4], [156.0, 45.0], [155.0, 54.0], [153.0, 49.33333333333333], [152.0, 48.16666666666667], [167.0, 48.833333333333336], [166.0, 53.666666666666664], [165.0, 46.333333333333336], [164.0, 48.923076923076934], [163.0, 48.037037037037045], [162.0, 48.63636363636363], [160.0, 48.888888888888886], [175.0, 48.6], [174.0, 48.75], [173.0, 49.8], [172.0, 48.79999999999999], [171.0, 46.0], [170.0, 52.111111111111114], [169.0, 48.33333333333333], [168.0, 48.71428571428572], [183.0, 48.67741935483872], [182.0, 53.0], [181.0, 49.0], [180.0, 48.875], [179.0, 51.142857142857146], [178.0, 54.333333333333336], [177.0, 57.75], [176.0, 50.0], [191.0, 47.0], [190.0, 50.95652173913044], [189.0, 47.666666666666664], [188.0, 48.375], [187.0, 48.8], [186.0, 49.00000000000001], [185.0, 48.53333333333334], [184.0, 48.46666666666667], [199.0, 51.40816326530613], [198.0, 51.666666666666664], [197.0, 49.75], [196.0, 50.8], [195.0, 49.0], [194.0, 48.166666666666664], [193.0, 52.0], [192.0, 49.94117647058823], [207.0, 50.0], [206.0, 50.67741935483872], [205.0, 51.0], [204.0, 49.0], [203.0, 50.333333333333336], [202.0, 56.74074074074075], [201.0, 50.166666666666664], [200.0, 49.07692307692308], [215.0, 51.521739130434774], [214.0, 50.81818181818182], [213.0, 51.0], [212.0, 51.08333333333334], [211.0, 49.6], [210.0, 51.25], [209.0, 53.0], [208.0, 51.31249999999999], [223.0, 54.07142857142857], [222.0, 50.900000000000006], [221.0, 50.0], [220.0, 50.862068965517246], [219.0, 51.38461538461539], [218.0, 49.0], [217.0, 52.22222222222222], [216.0, 52.75], [231.0, 51.666666666666664], [230.0, 64.57894736842105], [229.0, 54.315789473684205], [228.0, 57.0], [227.0, 50.444444444444436], [226.0, 51.99999999999999], [225.0, 52.0], [224.0, 53.0], [239.0, 52.0], [238.0, 55.0], [237.0, 54.733333333333334], [236.0, 53.10344827586206], [235.0, 52.5], [234.0, 52.857142857142854], [233.0, 53.63636363636363], [232.0, 52.666666666666664], [247.0, 53.285714285714285], [246.0, 54.0], [245.0, 65.33333333333333], [243.0, 50.75], [242.0, 51.5], [241.0, 49.0], [240.0, 52.0], [255.0, 57.42857142857144], [254.0, 52.16666666666667], [253.0, 54.88235294117647], [252.0, 298.95], [251.0, 55.333333333333336], [250.0, 52.4], [249.0, 53.0], [248.0, 51.0], [270.0, 52.411764705882355], [271.0, 642.3636363636364], [269.0, 53.69565217391305], [268.0, 50.0], [267.0, 51.5], [266.0, 51.555555555555564], [265.0, 51.57142857142857], [264.0, 53.3], [263.0, 55.10526315789474], [256.0, 54.52941176470588], [259.0, 53.5], [258.0, 53.857142857142854], [262.0, 55.44444444444444], [261.0, 52.4375], [260.0, 53.89285714285715], [286.0, 53.0], [287.0, 51.0], [285.0, 59.666666666666664], [284.0, 53.12499999999999], [283.0, 54.787234042553195], [282.0, 56.49999999999999], [281.0, 57.14285714285715], [280.0, 379.3], [279.0, 59.63157894736842], [273.0, 1584.0], [272.0, 53.0], [275.0, 50.0], [274.0, 54.33333333333333], [278.0, 52.26666666666667], [277.0, 52.0], [301.0, 55.571428571428584], [302.0, 56.41666666666667], [300.0, 335.5625], [291.0, 56.093023255813954], [290.0, 65.10714285714285], [289.0, 72.91666666666666], [299.0, 60.58333333333333], [298.0, 55.42857142857143], [297.0, 52.5], [296.0, 53.5], [295.0, 53.93103448275862], [294.0, 52.0], [293.0, 52.75], [292.0, 52.375], [318.0, 57.142857142857146], [319.0, 68.83333333333333], [317.0, 54.5], [316.0, 59.090909090909086], [315.0, 61.6], [314.0, 56.625], [313.0, 55.94736842105262], [312.0, 60.42857142857142], [311.0, 62.85000000000001], [305.0, 56.592592592592595], [304.0, 59.85714285714286], [307.0, 50.0], [306.0, 53.5], [310.0, 53.0], [309.0, 55.395833333333336], [333.0, 62.11538461538461], [335.0, 63.888888888888886], [332.0, 70.83333333333333], [323.0, 60.66666666666666], [322.0, 50.5], [321.0, 63.92307692307693], [320.0, 59.476190476190474], [331.0, 63.14285714285715], [330.0, 67.48], [329.0, 59.111111111111114], [328.0, 52.09090909090909], [326.0, 63.4], [325.0, 55.5], [324.0, 61.2], [350.0, 66.06060606060606], [351.0, 54.5], [349.0, 63.25], [348.0, 69.83333333333333], [347.0, 56.333333333333336], [346.0, 70.14285714285715], [345.0, 83.5], [344.0, 63.87499999999999], [343.0, 61.916666666666664], [337.0, 69.76923076923077], [336.0, 54.0], [339.0, 71.22], [338.0, 53.57142857142857], [342.0, 53.2], [341.0, 61.777777777777786], [340.0, 55.0], [366.0, 53.91666666666667], [367.0, 72.30000000000001], [365.0, 84.85714285714286], [364.0, 64.53333333333333], [363.0, 54.5], [362.0, 60.51428571428571], [361.0, 1773.5], [360.0, 51.6], [359.0, 69.41666666666669], [353.0, 62.55555555555555], [352.0, 71.29032258064517], [355.0, 89.0], [354.0, 71.5], [358.0, 50.833333333333336], [357.0, 48.0], [356.0, 71.625], [382.0, 51.0], [383.0, 76.40000000000002], [381.0, 91.0], [380.0, 61.2], [379.0, 120.50000000000001], [378.0, 57.166666666666664], [377.0, 94.20833333333333], [376.0, 120.6], [375.0, 83.18181818181817], [369.0, 60.44444444444444], [371.0, 70.78571428571429], [370.0, 70.91666666666667], [374.0, 104.0], [373.0, 75.5], [372.0, 61.500000000000014], [398.0, 230.0], [399.0, 102.875], [397.0, 51.44444444444444], [396.0, 62.19999999999999], [395.0, 54.0], [394.0, 54.07692307692307], [393.0, 53.285714285714285], [392.0, 51.0], [391.0, 106.28571428571429], [385.0, 375.0], [384.0, 58.444444444444436], [387.0, 174.33333333333331], [386.0, 73.4], [390.0, 89.73333333333333], [389.0, 91.21739130434783], [414.0, 77.8125], [415.0, 60.43478260869565], [413.0, 55.5], [412.0, 76.88888888888889], [411.0, 59.416666666666664], [410.0, 57.111111111111114], [409.0, 103.1], [408.0, 65.78260869565216], [407.0, 50.5], [401.0, 69.37931034482759], [400.0, 83.66666666666666], [403.0, 53.199999999999996], [402.0, 74.75000000000001], [406.0, 78.94444444444446], [404.0, 55.0], [428.0, 313.9333333333333], [416.0, 877.6944444444449], [417.0, 99.73076923076923], [419.0, 69.17391304347828], [418.0, 129.5882352941177], [421.0, 172.09999999999997], [420.0, 141.33333333333334], [422.0, 67.88888888888889], [423.0, 705.6666666666667], [424.0, 294.47058823529414], [425.0, 465.31578947368416], [426.0, 214.34782608695653], [427.0, 67.11764705882356], [429.0, 511.15000000000015], [430.0, 214.94736842105263], [431.0, 52.2], [447.0, 259.78947368421046], [434.0, 1800.3636363636363], [433.0, 82.88235294117646], [432.0, 51.0], [438.0, 82.05000000000001], [437.0, 72.375], [436.0, 59.0], [435.0, 1038.5], [440.0, 185.40625000000006], [441.0, 432.3], [442.0, 829.4000000000001], [443.0, 204.78571428571428], [446.0, 115.83333333333333], [445.0, 70.0958904109589], [444.0, 51.27272727272727], [460.0, 127.77358490566031], [448.0, 1540.5], [449.0, 58.93333333333333], [455.0, 70.6857142857143], [454.0, 83.625], [453.0, 58.22222222222222], [450.0, 393.54545454545456], [451.0, 142.83333333333331], [458.0, 2480.25], [457.0, 55.666666666666664], [463.0, 375.87999999999994], [462.0, 68.4], [461.0, 66.46428571428572], [459.0, 77.36956521739133], [477.0, 816.4500000000003], [475.0, 335.3636363636364], [476.0, 1261.6923076923076], [467.0, 68.5357142857143], [466.0, 59.699999999999996], [465.0, 59.866666666666674], [464.0, 60.13333333333333], [478.0, 771.1176470588238], [479.0, 1193.3636363636367], [473.0, 55.9], [472.0, 128.99999999999997], [471.0, 63.73333333333333], [470.0, 64.33333333333336], [469.0, 59.62499999999999], [468.0, 79.75510204081633], [493.0, 1977.0], [482.0, 4139.0], [483.0, 793.0], [485.0, 568.8333333333334], [484.0, 54.333333333333336], [487.0, 65.09090909090908], [481.0, 257.05555555555554], [480.0, 62.411764705882355], [486.0, 88.3157894736842], [488.0, 474.0606060606061], [489.0, 2734.5], [491.0, 106.0625], [490.0, 66.63636363636361], [494.0, 924.0], [495.0, 263.39285714285717], [492.0, 84.14285714285714], [511.0, 68.5], [501.0, 970.6], [500.0, 140.0], [502.0, 217.9508196721311], [505.0, 1034.2222222222222], [504.0, 82.16981132075475], [506.0, 332.35999999999996], [507.0, 407.76], [510.0, 70.68181818181817], [509.0, 55.0], [508.0, 82.0], [503.0, 83.40909090909089], [498.0, 74.08333333333331], [496.0, 55.0], [499.0, 56.5], [518.0, 581.9090909090905], [524.0, 237.56000000000003], [512.0, 683.6666666666667], [513.0, 60.89473684210527], [514.0, 2469.3333333333335], [515.0, 776.4285714285714], [517.0, 61.9375], [516.0, 55.62499999999999], [529.0, 1366.4545454545457], [543.0, 1606.9285714285713], [528.0, 78.00000000000001], [541.0, 364.8125], [542.0, 2391.0], [537.0, 1961.5000000000002], [536.0, 99.99999999999999], [519.0, 71.125], [539.0, 94.05555555555554], [538.0, 80.78571428571429], [540.0, 534.9375], [530.0, 421.75000000000006], [532.0, 145.66666666666663], [531.0, 88.04761904761905], [533.0, 186.49999999999997], [534.0, 152.06153846153848], [535.0, 2980.5], [521.0, 1136.25], [520.0, 67.88235294117646], [522.0, 3507.6666666666665], [523.0, 1123.375], [526.0, 73.12820512820515], [525.0, 72.0], [527.0, 1532.2000000000003], [550.0, 2761.0], [557.0, 505.1851851851851], [546.0, 3396.0], [545.0, 679.422222222222], [544.0, 91.0], [559.0, 3364.0], [558.0, 86.125], [548.0, 369.37499999999994], [547.0, 69.0], [549.0, 93.57142857142857], [551.0, 1860.4285714285709], [568.0, 91.5], [570.0, 1069.8095238095239], [569.0, 194.2], [571.0, 386.59999999999997], [572.0, 1129.3599999999997], [573.0, 800.7500000000002], [574.0, 771.6363636363637], [575.0, 1280.0], [560.0, 259.2982456140351], [561.0, 585.6111111111111], [562.0, 2675.714285714286], [563.0, 241.83333333333334], [564.0, 58.5], [565.0, 496.25], [566.0, 821.9444444444443], [567.0, 373.6493506493507], [554.0, 1089.888888888889], [553.0, 78.83333333333333], [552.0, 109.54545454545453], [555.0, 1011.8275862068966], [556.0, 660.909090909091], [581.0, 641.3793103448274], [577.0, 140.6886792452829], [576.0, 3263.3333333333335], [578.0, 874.3333333333333], [579.0, 536.0588235294117], [580.0, 261.8666666666666], [592.0, 372.63888888888897], [607.0, 689.6666666666666], [605.0, 402.87500000000006], [606.0, 225.03030303030297], [600.0, 950.6666666666666], [583.0, 150.01428571428573], [582.0, 111.42857142857144], [602.0, 101.4], [601.0, 106.5], [604.0, 517.4], [593.0, 534.3333333333333], [595.0, 1114.6], [594.0, 99.90740740740738], [597.0, 71.33333333333333], [596.0, 104.21428571428571], [599.0, 1235.1578947368419], [598.0, 119.0], [586.0, 1197.9090909090908], [585.0, 57.333333333333336], [584.0, 108.95348837209303], [587.0, 309.27272727272725], [588.0, 841.3461538461537], [590.0, 81.90476190476193], [589.0, 89.86666666666666], [591.0, 731.5714285714284], [634.0, 127.33333333333333], [638.0, 150.69072164948466], [608.0, 272.063829787234], [617.0, 251.44444444444446], [616.0, 111.25], [619.0, 54.0], [618.0, 222.0], [621.0, 113.5], [620.0, 101.125], [623.0, 111.5], [622.0, 77.28571428571429], [624.0, 581.1428571428571], [626.0, 60.0], [625.0, 87.14285714285714], [627.0, 150.71999999999997], [628.0, 133.14634146341461], [631.0, 248.5600000000001], [629.0, 118.36363636363637], [637.0, 216.82352941176467], [636.0, 191.0], [635.0, 105.6], [633.0, 92.48148148148147], [632.0, 72.57142857142858], [615.0, 97.20588235294122], [614.0, 1024.0], [613.0, 102.92307692307692], [612.0, 93.80000000000001], [611.0, 127.33333333333334], [610.0, 61.0], [609.0, 101.8], [639.0, 106.27272727272727], [664.0, 215.72727272727272], [651.0, 184.06896551724142], [643.0, 383.06666666666666], [642.0, 121.6], [641.0, 70.6875], [640.0, 66.0], [645.0, 76.18181818181819], [644.0, 128.93333333333334], [647.0, 166.6], [646.0, 173.57142857142858], [655.0, 96.8], [654.0, 129.16666666666666], [653.0, 134.0], [652.0, 105.39999999999999], [649.0, 113.97727272727273], [648.0, 119.375], [650.0, 136.78571428571428], [657.0, 276.5833333333333], [658.0, 1156.0], [659.0, 166.49999999999997], [661.0, 217.08333333333337], [660.0, 118.60000000000001], [663.0, 118.24561403508771], [662.0, 51.0], [665.0, 164.29629629629628], [666.0, 131.21428571428575], [667.0, 189.17391304347834], [668.0, 383.4615384615385], [669.0, 133.20833333333337], [670.0, 218.27586206896544], [671.0, 210.18518518518522], [656.0, 119.13333333333333], [677.0, 237.52941176470594], [672.0, 166.27777777777774], [674.0, 80.33333333333334], [673.0, 111.39130434782611], [676.0, 162.0], [675.0, 312.0], [678.0, 206.03571428571433], [679.0, 182.83870967741936], [680.0, 188.15789473684214], [682.0, 117.13548387096772], [681.0, 192.77142857142852], [684.0, 109.29166666666667], [683.0, 102.43119266055045], [685.0, 337.92], [686.0, 688.1666666666667], [687.0, 166.0892857142857], [690.0, 201.13533834586457], [697.0, 420.4], [696.0, 138.2608695652174], [699.0, 113.34375], [698.0, 127.17391304347825], [701.0, 881.1111111111111], [703.0, 113.79999999999998], [689.0, 132.0], [688.0, 105.08823529411767], [702.0, 170.1538461538462], [694.0, 213.29166666666666], [693.0, 157.66666666666666], [692.0, 118.52727272727272], [691.0, 130.91237113402056], [695.0, 160.93333333333334], [706.0, 235.54999999999998], [705.0, 176.18518518518528], [704.0, 261.3333333333333], [709.0, 498.00000000000006], [708.0, 173.0], [707.0, 327.4117647058824], [710.0, 561.4], [712.0, 615.3125], [713.0, 239.75], [714.0, 750.8888888888889], [718.0, 1051.3636363636365], [716.0, 202.5], [715.0, 178.21428571428572], [719.0, 216.6], [723.0, 5907.0], [722.0, 245.66666666666666], [721.0, 165.5], [720.0, 158.33333333333334], [732.0, 285.41666666666663], [733.0, 176.40000000000003], [735.0, 2023.0], [730.0, 1465.8333333333335], [729.0, 310.5], [711.0, 291.25], [731.0, 907.2], [724.0, 579.5], [725.0, 1663.25], [727.0, 930.0], [726.0, 145.1111111111111], [743.0, 466.5], [739.0, 1023.6923076923078], [736.0, 3206.5], [738.0, 202.2222222222222], [737.0, 152.33333333333334], [750.0, 811.0], [749.0, 137.80000000000004], [751.0, 2568.0], [740.0, 776.230769230769], [741.0, 1341.3333333333333], [742.0, 373.5], [752.0, 264.8181818181818], [766.0, 889.0], [767.0, 861.5], [761.0, 308.4177215189874], [760.0, 143.9], [762.0, 189.0], [764.0, 184.4], [763.0, 156.5], [765.0, 745.1249999999998], [753.0, 495.0526315789472], [754.0, 1561.142857142857], [755.0, 145.16666666666666], [756.0, 546.6296296296294], [757.0, 348.4285714285714], [759.0, 147.0], [758.0, 145.77551020408163], [744.0, 537.6666666666666], [745.0, 198.66666666666666], [746.0, 449.0], [747.0, 1152.1428571428569], [748.0, 1091.8], [796.0, 163.15151515151513], [780.0, 339.0], [775.0, 1175.75], [777.0, 1746.888888888889], [776.0, 53.0], [778.0, 273.8], [779.0, 543.9583333333335], [783.0, 350.8823529411766], [768.0, 148.26923076923077], [770.0, 199.33333333333334], [769.0, 141.2], [772.0, 149.48387096774195], [771.0, 110.71428571428572], [774.0, 167.0], [773.0, 57.0], [782.0, 211.57142857142856], [781.0, 58.0], [784.0, 2499.0], [799.0, 673.0909090909089], [797.0, 495.2307692307692], [798.0, 646.8], [793.0, 131.9090909090909], [792.0, 104.25000000000001], [795.0, 100.5], [794.0, 147.4], [785.0, 660.0], [787.0, 169.6341463414634], [786.0, 144.40000000000003], [788.0, 271.20512820512823], [789.0, 1162.625], [791.0, 1076.181818181818], [790.0, 101.99999999999999], [806.0, 558.0], [812.0, 621.1666666666666], [802.0, 346.84615384615387], [801.0, 187.53846153846155], [800.0, 195.0], [803.0, 211.39393939393938], [805.0, 397.5], [804.0, 179.33333333333331], [817.0, 277.5641025641025], [831.0, 232.66666666666669], [816.0, 167.44117647058823], [827.0, 635.090909090909], [826.0, 157.45454545454547], [825.0, 141.60869565217394], [824.0, 157.1219512195122], [807.0, 114.0], [829.0, 161.1891891891892], [828.0, 200.28571428571428], [830.0, 326.46511627906966], [818.0, 158.25], [820.0, 769.5833333333333], [819.0, 163.23076923076923], [821.0, 293.1794871794872], [823.0, 177.66666666666666], [822.0, 144.33333333333334], [808.0, 276.65714285714284], [809.0, 185.66666666666669], [810.0, 246.96000000000004], [811.0, 388.9375], [813.0, 816.8823529411766], [814.0, 115.25], [815.0, 140.42857142857142], [837.0, 1397.0], [833.0, 379.03448275862064], [832.0, 955.4615384615386], [847.0, 141.74137931034488], [845.0, 590.125], [846.0, 365.1000000000001], [843.0, 235.05555555555554], [842.0, 72.6], [844.0, 150.32394366197184], [834.0, 196.5], [835.0, 2006.0], [836.0, 1141.0], [839.0, 487.9999999999999], [838.0, 132.22857142857143], [856.0, 158.6388888888889], [857.0, 640.5], [858.0, 629.2857142857142], [859.0, 96.72727272727272], [860.0, 795.7142857142857], [861.0, 695.5333333333334], [863.0, 100.05882352941175], [862.0, 98.31818181818183], [848.0, 325.41666666666663], [851.0, 194.9375], [850.0, 124.28787878787881], [849.0, 142.33333333333334], [853.0, 146.72727272727272], [852.0, 228.0], [854.0, 353.4137931034485], [855.0, 248.23809523809518], [840.0, 216.6153846153846], [841.0, 176.7058823529412], [871.0, 216.42857142857144], [875.0, 536.6], [864.0, 186.72], [865.0, 206.33333333333334], [869.0, 420.3999999999999], [868.0, 233.5], [867.0, 201.77272727272725], [866.0, 254.92857142857147], [870.0, 182.44444444444446], [880.0, 227.92063492063488], [881.0, 115.3214285714286], [895.0, 234.0], [893.0, 461.1111111111111], [894.0, 196.53488372093025], [891.0, 220.60759493670892], [892.0, 236.21311475409837], [888.0, 415.41666666666663], [889.0, 147.10256410256412], [890.0, 194.93220338983048], [882.0, 1477.1666666666667], [885.0, 287.24], [884.0, 168.47619047619048], [883.0, 127.51351351351353], [887.0, 565.6], [886.0, 170.1875], [872.0, 500.75], [873.0, 577.0], [874.0, 277.7142857142858], [876.0, 293.22222222222223], [877.0, 191.70370370370375], [903.0, 354.1904761904761], [909.0, 629.5], [898.0, 548.5263157894738], [897.0, 500.0], [896.0, 190.4285714285714], [899.0, 232.69230769230768], [900.0, 221.03333333333327], [902.0, 1116.0], [901.0, 132.71428571428572], [912.0, 171.2584269662921], [914.0, 142.06060606060603], [913.0, 158.96153846153842], [927.0, 201.3955223880598], [925.0, 202.90476190476187], [924.0, 176.0179640718563], [926.0, 1977.0], [922.0, 257.0816326530613], [923.0, 881.0], [920.0, 185.14942528735634], [921.0, 215.78832116788325], [915.0, 737.3999999999999], [916.0, 201.26923076923075], [917.0, 155.06666666666666], [919.0, 186.77040816326527], [918.0, 138.35593220338984], [904.0, 842.4615384615383], [906.0, 159.0], [905.0, 147.0], [907.0, 476.28], [908.0, 227.70454545454538], [910.0, 274.2413793103449], [911.0, 310.5], [953.0, 365.03999999999996], [930.0, 295.38095238095235], [929.0, 231.19736842105257], [928.0, 178.25000000000003], [943.0, 203.0666666666667], [942.0, 137.14285714285714], [931.0, 1259.6470588235293], [932.0, 222.0], [933.0, 395.23076923076917], [938.0, 196.71428571428572], [937.0, 199.76666666666665], [936.0, 269.66666666666663], [939.0, 730.3333333333331], [940.0, 533.9259259259259], [941.0, 286.96875], [944.0, 555.8571428571429], [958.0, 298.8648648648649], [959.0, 424.30769230769226], [956.0, 1790.0], [957.0, 260.52173913043475], [954.0, 405.00000000000006], [955.0, 350.70588235294116], [952.0, 447.2857142857143], [935.0, 186.3], [934.0, 177.2432432432432], [945.0, 544.9285714285716], [947.0, 313.0263157894737], [946.0, 184.88888888888889], [948.0, 101.25], [950.0, 282.92307692307696], [949.0, 199.00000000000003], [951.0, 1025.5714285714287], [965.0, 1173.4444444444443], [962.0, 1815.0], [961.0, 240.0], [960.0, 175.6], [964.0, 257.0], [963.0, 371.40000000000003], [966.0, 473.49999999999994], [984.0, 186.46153846153848], [967.0, 171.33333333333334], [986.0, 197.78125], [985.0, 196.0], [988.0, 159.43243243243242], [987.0, 156.0], [990.0, 243.41666666666669], [989.0, 207.70491803278688], [968.0, 353.22222222222223], [970.0, 264.0], [969.0, 186.6470588235294], [972.0, 222.38888888888889], [971.0, 221.9], [973.0, 947.9375], [975.0, 696.6666666666666], [974.0, 199.99999999999997], [976.0, 387.0], [977.0, 1320.25], [978.0, 603.0], [981.0, 323.76190476190476], [980.0, 220.38461538461542], [979.0, 207.0], [982.0, 528.0], [983.0, 197.93617021276594], [995.0, 1073.190476190476], [992.0, 576.6279069767439], [993.0, 236.27586206896544], [994.0, 329.2391304347826], [996.0, 329.12500000000006], [997.0, 432.7272727272727], [998.0, 781.5333333333333], [999.0, 393.3559322033899], [1000.0, 534.7030937486682], [1.0, 48.0]], "isOverall": false, "label": "Shorten Url", "isController": false}, {"data": [[902.0355944428685, 455.59173017216733]], "isOverall": false, "label": "Shorten Url-Aggregated", "isController": false}, {"data": [[2.0, 89.0], [4.0, 87.0], [5.0, 90.0], [6.0, 88.0], [7.0, 87.0], [8.0, 87.0], [10.0, 93.0], [12.0, 89.0], [13.0, 86.0], [17.0, 86.0], [18.0, 85.0], [19.0, 91.0], [21.0, 87.33333333333333], [22.0, 86.66666666666667], [23.0, 89.0], [24.0, 109.0], [25.0, 86.0], [26.0, 87.0], [27.0, 102.0], [29.0, 89.5], [31.0, 88.75], [33.0, 84.0], [32.0, 88.0], [35.0, 87.0], [34.0, 88.33333333333333], [37.0, 765.6], [36.0, 86.5], [38.0, 3500.0], [41.0, 85.0], [40.0, 93.0], [43.0, 86.0], [45.0, 89.33333333333333], [47.0, 86.5], [49.0, 85.0], [48.0, 87.0], [50.0, 87.18181818181817], [53.0, 87.0], [55.0, 89.0], [54.0, 98.85714285714286], [57.0, 88.33333333333333], [56.0, 85.0], [59.0, 87.5], [61.0, 86.0], [60.0, 92.0], [63.0, 87.2], [62.0, 88.0], [67.0, 85.0], [66.0, 90.2], [65.0, 97.72222222222223], [64.0, 87.75], [71.0, 85.5], [70.0, 90.85714285714286], [69.0, 87.75], [68.0, 95.0], [75.0, 91.09090909090907], [74.0, 87.16666666666667], [73.0, 88.0], [72.0, 95.3], [79.0, 88.42857142857143], [78.0, 87.66666666666667], [77.0, 87.625], [76.0, 87.33333333333333], [83.0, 87.83333333333334], [82.0, 87.5], [81.0, 88.0], [80.0, 87.5], [86.0, 88.0], [84.0, 87.4], [91.0, 86.0], [90.0, 89.2], [89.0, 87.0], [88.0, 102.33333333333333], [95.0, 90.36363636363637], [94.0, 88.33333333333333], [93.0, 87.57142857142857], [92.0, 87.6875], [99.0, 95.5], [98.0, 90.06249999999999], [97.0, 90.25], [103.0, 95.0], [102.0, 94.33333333333333], [101.0, 86.0], [100.0, 90.25], [107.0, 90.0], [106.0, 89.0], [105.0, 90.0], [104.0, 95.4], [110.0, 86.0], [109.0, 89.875], [108.0, 86.5], [114.0, 87.26666666666665], [113.0, 91.25], [119.0, 98.49999999999999], [118.0, 88.75], [116.0, 86.33333333333333], [123.0, 87.75], [122.0, 89.2], [121.0, 88.8125], [120.0, 86.0], [127.0, 90.16666666666667], [126.0, 89.2], [125.0, 87.0], [124.0, 88.0], [135.0, 87.75], [134.0, 90.5], [133.0, 89.14285714285715], [132.0, 87.0], [131.0, 90.875], [130.0, 88.0625], [129.0, 88.1111111111111], [128.0, 89.06666666666665], [143.0, 145.66666666666666], [141.0, 90.0], [140.0, 92.0], [139.0, 100.0], [138.0, 88.25000000000001], [137.0, 168.66666666666666], [136.0, 89.5], [151.0, 88.72222222222221], [150.0, 85.0], [149.0, 89.45454545454545], [148.0, 88.5], [147.0, 90.57894736842105], [146.0, 92.33333333333333], [145.0, 100.8], [144.0, 88.33333333333333], [158.0, 87.875], [157.0, 89.66666666666667], [156.0, 84.0], [155.0, 87.81818181818183], [154.0, 102.5], [153.0, 88.5], [152.0, 87.2], [167.0, 88.33333333333334], [166.0, 88.75000000000001], [165.0, 90.5], [164.0, 88.25], [163.0, 87.76923076923075], [162.0, 87.16666666666666], [161.0, 88.0], [160.0, 87.75000000000001], [175.0, 89.55555555555556], [174.0, 86.0], [173.0, 88.8], [172.0, 89.79310344827589], [171.0, 89.25], [170.0, 90.3125], [169.0, 87.0], [168.0, 87.99999999999999], [183.0, 89.04347826086955], [182.0, 143.0], [181.0, 94.7], [180.0, 89.88888888888889], [179.0, 87.0], [178.0, 87.75], [177.0, 89.0], [176.0, 90.0], [191.0, 92.5], [190.0, 90.93939393939394], [189.0, 90.6], [188.0, 89.0], [187.0, 86.75], [186.0, 90.64999999999999], [185.0, 92.8], [184.0, 89.28571428571429], [199.0, 99.36111111111111], [198.0, 93.0], [197.0, 93.0], [196.0, 90.5], [195.0, 94.0], [194.0, 89.27272727272728], [193.0, 89.0], [192.0, 91.05882352941177], [207.0, 91.6], [206.0, 94.87234042553192], [205.0, 89.0], [204.0, 91.0], [203.0, 91.0], [202.0, 91.55555555555556], [201.0, 87.75], [200.0, 90.5], [215.0, 115.375], [214.0, 90.23529411764706], [213.0, 92.0], [212.0, 92.33333333333334], [211.0, 93.0], [210.0, 94.0909090909091], [209.0, 214.5], [208.0, 90.61111111111113], [223.0, 93.91666666666669], [222.0, 90.28571428571428], [221.0, 96.88888888888889], [220.0, 92.28571428571429], [219.0, 96.88888888888889], [218.0, 90.0], [217.0, 92.28571428571428], [216.0, 88.0], [231.0, 88.0], [230.0, 97.3703703703704], [229.0, 95.93749999999999], [228.0, 93.08333333333334], [227.0, 100.08333333333334], [226.0, 90.45454545454545], [225.0, 93.81818181818181], [224.0, 94.0], [239.0, 96.0], [238.0, 96.28571428571428], [237.0, 95.06666666666666], [236.0, 95.42857142857144], [235.0, 101.55555555555557], [234.0, 103.0], [233.0, 103.0], [232.0, 101.0], [247.0, 93.1764705882353], [246.0, 92.14285714285715], [245.0, 94.15384615384616], [243.0, 94.84615384615384], [242.0, 98.16666666666667], [241.0, 92.0], [240.0, 98.0], [255.0, 96.93750000000001], [254.0, 91.0], [253.0, 92.9375], [252.0, 94.29999999999997], [251.0, 90.66666666666667], [250.0, 98.0], [249.0, 96.05882352941178], [248.0, 96.0], [270.0, 99.68181818181817], [271.0, 97.04761904761905], [269.0, 98.80000000000003], [268.0, 90.4], [267.0, 93.2], [266.0, 95.69999999999999], [265.0, 93.00000000000001], [264.0, 94.16666666666666], [263.0, 94.98611111111111], [256.0, 99.2], [259.0, 97.71428571428571], [258.0, 93.0], [262.0, 94.8], [261.0, 91.6923076923077], [260.0, 104.83333333333333], [285.0, 92.0], [286.0, 96.625], [284.0, 98.75], [275.0, 142.0], [274.0, 92.6923076923077], [273.0, 96.75], [272.0, 97.66666666666667], [283.0, 95.6056338028169], [282.0, 94.11111111111111], [281.0, 100.0], [280.0, 102.66666666666667], [279.0, 108.33333333333331], [278.0, 125.6], [277.0, 88.33333333333333], [302.0, 103.46666666666668], [303.0, 92.4], [301.0, 98.70270270270272], [300.0, 93.4], [299.0, 97.73333333333333], [298.0, 94.28571428571429], [296.0, 93.33333333333333], [295.0, 101.4090909090909], [289.0, 124.79166666666664], [291.0, 100.44444444444444], [290.0, 107.36363636363639], [294.0, 99.55555555555556], [293.0, 92.0], [292.0, 105.875], [318.0, 108.71428571428572], [319.0, 98.4], [317.0, 96.5], [316.0, 104.06666666666668], [315.0, 103.57142857142857], [314.0, 101.0], [313.0, 96.8], [312.0, 99.5], [311.0, 100.65384615384616], [305.0, 100.86666666666666], [304.0, 109.0], [307.0, 94.75], [306.0, 91.0], [310.0, 119.75], [309.0, 100.925], [308.0, 140.0], [334.0, 93.33333333333333], [335.0, 111.87500000000001], [333.0, 105.29411764705883], [332.0, 113.5], [331.0, 94.71428571428571], [330.0, 113.57142857142856], [329.0, 93.66666666666667], [328.0, 96.61538461538461], [327.0, 120.71428571428572], [321.0, 97.1304347826087], [320.0, 105.3076923076923], [323.0, 103.82142857142858], [322.0, 99.8], [326.0, 98.0], [325.0, 109.57142857142857], [324.0, 111.5], [350.0, 106.1025641025641], [351.0, 124.2], [349.0, 121.625], [348.0, 107.46666666666665], [347.0, 97.0], [346.0, 107.94736842105263], [345.0, 121.00000000000001], [344.0, 109.56], [343.0, 103.41666666666666], [337.0, 93.11764705882354], [336.0, 106.24999999999999], [339.0, 113.45098039215686], [338.0, 140.08333333333334], [342.0, 99.2], [341.0, 99.79166666666667], [340.0, 92.8], [366.0, 121.16666666666666], [367.0, 97.27777777777777], [365.0, 95.0], [364.0, 114.99999999999999], [363.0, 121.42857142857143], [362.0, 139.11999999999998], [361.0, 92.0], [360.0, 121.85714285714286], [359.0, 107.33333333333334], [353.0, 102.76], [352.0, 114.99999999999999], [355.0, 799.0], [354.0, 133.3], [358.0, 116.2], [357.0, 99.5], [356.0, 109.4], [382.0, 95.0], [383.0, 123.95833333333331], [381.0, 135.55555555555554], [380.0, 141.625], [379.0, 116.11111111111111], [378.0, 112.125], [377.0, 97.2051282051282], [376.0, 97.8], [375.0, 106.2], [369.0, 102.85714285714285], [368.0, 102.8], [371.0, 101.76923076923077], [370.0, 163.25], [374.0, 91.28571428571428], [373.0, 94.76470588235297], [372.0, 177.94545454545457], [398.0, 124.33333333333333], [399.0, 95.57142857142857], [397.0, 116.57142857142857], [396.0, 122.71428571428571], [395.0, 90.5], [394.0, 111.56666666666666], [393.0, 98.85714285714285], [392.0, 105.0], [391.0, 91.5], [384.0, 133.4], [387.0, 168.4], [386.0, 136.8], [390.0, 97.8125], [389.0, 120.4375], [388.0, 94.0], [414.0, 117.53333333333333], [415.0, 110.09090909090911], [413.0, 146.0], [412.0, 149.28571428571428], [411.0, 141.71428571428572], [410.0, 105.5], [409.0, 126.0], [408.0, 113.52380952380952], [407.0, 94.66666666666667], [401.0, 135.7058823529412], [400.0, 107.35714285714285], [403.0, 137.33333333333334], [402.0, 151.45454545454547], [406.0, 125.47826086956525], [404.0, 118.8], [430.0, 177.0], [431.0, 156.85714285714286], [429.0, 104.07407407407409], [428.0, 150.625], [427.0, 126.42857142857143], [426.0, 141.4], [425.0, 103.76923076923079], [424.0, 99.10000000000001], [423.0, 94.0], [417.0, 108.16216216216216], [416.0, 104.67567567567568], [419.0, 118.09374999999999], [418.0, 162.85714285714286], [422.0, 100.33333333333334], [421.0, 114.02222222222221], [420.0, 137.77777777777777], [446.0, 114.0], [447.0, 118.4761904761905], [445.0, 127.8421052631579], [444.0, 104.2727272727273], [443.0, 99.06666666666668], [442.0, 90.33333333333333], [441.0, 104.8], [440.0, 111.84375], [439.0, 106.0], [433.0, 96.41860465116281], [432.0, 201.75], [435.0, 91.0], [434.0, 103.8], [438.0, 117.47619047619048], [437.0, 106.14285714285714], [436.0, 140.0526315789474], [462.0, 98.85714285714286], [463.0, 114.15384615384616], [461.0, 110.72727272727272], [460.0, 121.15555555555555], [459.0, 104.84905660377359], [458.0, 98.0], [457.0, 101.83333333333334], [455.0, 100.27272727272725], [449.0, 140.8], [448.0, 106.0], [451.0, 100.6951219512195], [450.0, 96.16666666666667], [454.0, 133.30769230769232], [453.0, 106.22727272727273], [478.0, 122.66666666666667], [479.0, 154.0], [477.0, 115.34615384615383], [476.0, 118.0], [475.0, 113.99999999999997], [474.0, 96.5], [473.0, 111.9090909090909], [472.0, 194.21212121212122], [471.0, 98.65217391304347], [465.0, 102.23076923076924], [464.0, 98.0], [467.0, 102.71428571428574], [466.0, 113.125], [470.0, 103.125], [469.0, 112.71428571428571], [468.0, 106.30612244897961], [494.0, 132.58333333333334], [495.0, 116.10000000000002], [492.0, 130.0], [483.0, 113.2], [481.0, 119.875], [480.0, 351.2307692307692], [491.0, 132.56], [490.0, 113.3125], [488.0, 107.08333333333331], [487.0, 134.60000000000002], [486.0, 111.10344827586206], [485.0, 99.57142857142857], [484.0, 112.25], [510.0, 139.42499999999995], [511.0, 107.71428571428571], [509.0, 107.0], [508.0, 121.33333333333333], [507.0, 136.8125], [506.0, 119.13793103448278], [505.0, 123.66666666666667], [504.0, 132.8428571428572], [503.0, 156.13333333333333], [496.0, 95.0], [499.0, 165.57142857142856], [498.0, 108.04545454545453], [502.0, 107.70212765957446], [501.0, 99.44444444444444], [500.0, 349.0], [539.0, 153.21951219512198], [543.0, 146.30769230769232], [522.0, 179.0], [521.0, 117.2], [520.0, 112.82857142857144], [524.0, 128.3703703703704], [523.0, 135.30769230769232], [526.0, 121.23404255319149], [525.0, 115.5], [527.0, 152.4], [532.0, 136.96296296296296], [531.0, 126.36], [530.0, 151.91666666666669], [529.0, 113.2], [528.0, 135.9459459459459], [533.0, 127.45945945945945], [534.0, 134.42424242424244], [535.0, 278.0], [542.0, 153.66666666666666], [541.0, 145.61111111111111], [540.0, 120.3529411764706], [538.0, 166.42857142857142], [537.0, 136.25], [536.0, 153.375], [519.0, 182.26666666666668], [518.0, 121.47222222222221], [517.0, 170.8125], [516.0, 110.81818181818181], [515.0, 98.8], [514.0, 157.0], [513.0, 119.05555555555556], [512.0, 126.22222222222224], [572.0, 148.1538461538461], [551.0, 125.11111111111111], [550.0, 226.0], [549.0, 123.875], [548.0, 350.4285714285714], [547.0, 158.27272727272728], [546.0, 114.0], [545.0, 133.23076923076923], [544.0, 162.6], [558.0, 130.33333333333334], [557.0, 159.37037037037032], [556.0, 124.0], [555.0, 167.80769230769226], [554.0, 172.0], [553.0, 115.87499999999999], [552.0, 121.61538461538466], [575.0, 140.66666666666669], [560.0, 140.64864864864867], [563.0, 136.63636363636363], [561.0, 114.125], [565.0, 124.375], [564.0, 115.0], [567.0, 141.39682539682536], [566.0, 165.39999999999998], [574.0, 165.83333333333334], [573.0, 148.76923076923075], [571.0, 116.58823529411767], [570.0, 155.9090909090909], [569.0, 126.75], [568.0, 123.0], [602.0, 168.6], [606.0, 149.0344827586207], [593.0, 197.26315789473685], [588.0, 155.375], [587.0, 179.18181818181816], [586.0, 143.8], [585.0, 207.33333333333334], [584.0, 154.36363636363637], [589.0, 125.46341463414633], [591.0, 133.75], [577.0, 142.33333333333326], [576.0, 1155.75], [579.0, 117.88888888888887], [578.0, 136.25], [581.0, 215.6363636363636], [580.0, 167.44444444444446], [583.0, 138.14000000000001], [582.0, 105.39999999999999], [590.0, 145.68965517241384], [601.0, 136.33333333333337], [600.0, 136.6], [603.0, 98.5], [595.0, 445.25], [594.0, 127.3333333333333], [596.0, 215.2142857142857], [599.0, 605.4117647058823], [598.0, 134.0], [597.0, 180.75], [607.0, 498.0], [592.0, 136.95238095238096], [605.0, 134.75], [604.0, 105.5], [633.0, 182.49999999999997], [609.0, 436.25], [608.0, 159.0714285714286], [623.0, 97.66666666666667], [622.0, 130.42857142857142], [621.0, 161.0909090909091], [620.0, 153.2307692307692], [611.0, 535.0], [610.0, 148.44444444444446], [612.0, 111.0], [614.0, 173.2], [613.0, 149.66666666666666], [632.0, 179.0], [615.0, 145.9666666666666], [618.0, 625.6666666666666], [617.0, 171.26923076923077], [616.0, 136.33333333333334], [619.0, 815.4], [624.0, 527.9230769230769], [627.0, 192.72093023255817], [626.0, 295.0], [625.0, 172.33333333333334], [628.0, 123.69565217391305], [629.0, 198.59259259259258], [631.0, 132.1578947368421], [630.0, 278.0], [637.0, 305.19607843137254], [636.0, 190.0], [635.0, 196.0], [634.0, 154.5], [638.0, 160.99999999999991], [639.0, 128.0], [667.0, 218.82222222222228], [643.0, 368.0999999999999], [644.0, 215.68], [646.0, 201.5], [645.0, 155.90909090909093], [664.0, 259.72499999999997], [647.0, 185.0], [666.0, 206.4], [665.0, 118.9375], [649.0, 214.31481481481487], [648.0, 134.625], [650.0, 214.45454545454547], [651.0, 171.63333333333335], [652.0, 295.40000000000003], [653.0, 170.85714285714286], [655.0, 208.83333333333331], [640.0, 123.0], [642.0, 152.36363636363635], [641.0, 183.05555555555554], [654.0, 121.66666666666666], [656.0, 367.00000000000006], [657.0, 264.75], [658.0, 306.4285714285714], [663.0, 186.6515151515151], [662.0, 186.0], [661.0, 167.0], [660.0, 154.3076923076923], [659.0, 162.38888888888889], [669.0, 201.22222222222217], [668.0, 139.6], [671.0, 166.08823529411768], [670.0, 183.48], [697.0, 191.5], [701.0, 492.5], [678.0, 205.29729729729732], [679.0, 231.0769230769231], [696.0, 183.06976744186045], [698.0, 149.13333333333335], [700.0, 207.0], [699.0, 156.62500000000003], [682.0, 179.53594771241825], [681.0, 157.96296296296296], [680.0, 143.42622950819674], [684.0, 209.97333333333336], [683.0, 171.07843137254906], [685.0, 202.57142857142856], [687.0, 149.3333333333333], [677.0, 166.95833333333334], [676.0, 179.0], [675.0, 189.9], [674.0, 374.0], [673.0, 179.47727272727266], [672.0, 180.5625], [686.0, 119.11111111111111], [690.0, 168.87662337662337], [694.0, 195.1428571428571], [693.0, 211.85714285714286], [692.0, 164.8142857142857], [691.0, 168.74390243902437], [695.0, 219.36842105263156], [703.0, 246.0], [689.0, 1190.3333333333335], [688.0, 175.56097560975616], [702.0, 286.57142857142856], [706.0, 570.5555555555555], [705.0, 411.44444444444446], [719.0, 280.1], [704.0, 272.0], [709.0, 444.83333333333337], [708.0, 230.0], [707.0, 308.25], [710.0, 579.6666666666666], [712.0, 424.7368421052631], [713.0, 241.0], [714.0, 426.00000000000006], [716.0, 431.5], [715.0, 209.72727272727272], [717.0, 249.0], [718.0, 458.25], [722.0, 527.0], [721.0, 215.44444444444446], [720.0, 238.13333333333335], [735.0, 1372.0], [734.0, 202.75], [731.0, 324.75], [730.0, 272.2], [729.0, 171.75], [711.0, 270.2], [732.0, 226.36363636363637], [733.0, 339.22222222222223], [723.0, 445.4], [725.0, 1433.3333333333333], [724.0, 232.0], [727.0, 904.8888888888888], [726.0, 188.42857142857144], [741.0, 548.0], [739.0, 509.29411764705884], [736.0, 1381.0], [738.0, 189.0], [737.0, 278.25], [751.0, 142.0], [740.0, 335.3], [743.0, 342.1666666666667], [742.0, 123.0], [760.0, 217.00000000000003], [761.0, 253.77215189873428], [762.0, 210.0], [764.0, 210.5], [763.0, 209.85714285714286], [765.0, 606.9999999999999], [766.0, 1017.3999999999999], [767.0, 585.3333333333333], [752.0, 104.71428571428572], [746.0, 975.0], [745.0, 196.8888888888889], [744.0, 174.25], [747.0, 203.125], [749.0, 212.625], [748.0, 252.75], [750.0, 887.1428571428571], [753.0, 579.4999999999999], [754.0, 848.8333333333334], [755.0, 236.20000000000002], [756.0, 257.037037037037], [759.0, 179.25], [758.0, 209.86486486486487], [757.0, 145.0], [793.0, 264.72222222222223], [780.0, 239.31249999999997], [772.0, 250.59375], [775.0, 2550.0], [774.0, 264.6666666666667], [773.0, 200.75], [792.0, 145.66666666666663], [796.0, 212.39506172839512], [795.0, 185.55555555555557], [794.0, 291.5], [797.0, 184.2], [798.0, 968.4999999999999], [799.0, 860.1875], [777.0, 1481.0], [776.0, 239.66666666666666], [778.0, 444.09677419354824], [779.0, 367.1724137931035], [782.0, 269.41666666666663], [781.0, 145.8], [783.0, 263.7333333333333], [769.0, 216.7142857142857], [768.0, 197.59375000000006], [771.0, 271.2], [770.0, 107.2], [784.0, 1440.0], [785.0, 1551.0], [786.0, 217.16666666666669], [787.0, 228.54716981132083], [788.0, 377.1499999999999], [789.0, 714.0], [790.0, 298.7857142857143], [791.0, 914.6], [827.0, 691.3], [803.0, 453.3333333333333], [801.0, 366.4], [800.0, 236.55555555555554], [802.0, 181.07142857142858], [815.0, 154.79999999999998], [814.0, 188.10344827586212], [806.0, 580.0000000000001], [805.0, 223.0], [804.0, 204.41666666666666], [824.0, 203.58536585365854], [807.0, 310.0], [826.0, 155.75], [825.0, 191.66666666666663], [830.0, 509.39024390243907], [829.0, 169.28947368421052], [828.0, 173.85], [831.0, 454.9642857142857], [816.0, 154.05263157894734], [808.0, 309.2765957446809], [809.0, 271.47058823529414], [810.0, 502.5200000000001], [811.0, 779.9], [812.0, 371.0], [813.0, 638.5], [817.0, 246.5352112676057], [819.0, 275.25], [818.0, 151.1875], [820.0, 273.88235294117646], [821.0, 479.04347826086945], [822.0, 1616.0], [823.0, 167.76923076923077], [839.0, 421.78571428571433], [834.0, 309.45], [832.0, 894.4], [833.0, 188.875], [846.0, 353.19047619047626], [845.0, 148.2], [847.0, 175.1794871794871], [835.0, 2005.0], [836.0, 950.5], [837.0, 1128.0], [838.0, 165.89130434782606], [848.0, 861.7142857142858], [849.0, 180.0], [863.0, 979.6], [861.0, 999.9999999999999], [862.0, 548.6428571428571], [858.0, 1016.0], [859.0, 301.8], [860.0, 843.3333333333333], [856.0, 218.08571428571435], [857.0, 503.1666666666667], [850.0, 237.93827160493834], [851.0, 408.3684210526316], [852.0, 473.0], [853.0, 308.4444444444444], [854.0, 254.11494252873558], [855.0, 194.89473684210526], [840.0, 382.2592592592593], [841.0, 643.0588235294117], [843.0, 469.7142857142858], [842.0, 172.4], [844.0, 216.19672131147541], [869.0, 463.7142857142857], [875.0, 664.3333333333333], [865.0, 641.9259259259259], [864.0, 353.5], [876.0, 387.06666666666666], [878.0, 220.0], [877.0, 202.53846153846155], [879.0, 816.0], [867.0, 300.73913043478274], [866.0, 198.4827586206897], [868.0, 185.66666666666666], [871.0, 326.79999999999995], [870.0, 125.5], [888.0, 466.73684210526324], [889.0, 229.61904761904762], [890.0, 335.83928571428567], [891.0, 352.701754385965], [892.0, 261.85714285714295], [893.0, 756.0], [895.0, 224.25], [894.0, 202.84848484848482], [880.0, 248.13043478260863], [885.0, 274.57894736842104], [884.0, 195.0], [883.0, 184.65909090909093], [882.0, 166.0], [881.0, 211.36666666666665], [886.0, 292.6315789473684], [887.0, 178.85714285714286], [872.0, 999.8235294117645], [873.0, 1282.25], [874.0, 328.3157894736842], [920.0, 210.26923076923066], [908.0, 345.47499999999997], [898.0, 243.07999999999998], [900.0, 182.34782608695647], [899.0, 197.54545454545453], [911.0, 194.0], [896.0, 238.5263157894737], [901.0, 322.1111111111111], [903.0, 474.69565217391306], [921.0, 317.515], [922.0, 252.10659898477158], [923.0, 635.5], [924.0, 250.9760479041917], [925.0, 292.9], [927.0, 230.9548872180451], [926.0, 259.0], [912.0, 205.71028037383172], [913.0, 443.2173913043479], [915.0, 235.0], [914.0, 219.95348837209298], [917.0, 199.8547008547009], [916.0, 235.72413793103453], [919.0, 232.838888888889], [918.0, 183.85624999999996], [904.0, 860.1999999999999], [905.0, 280.5], [906.0, 496.77777777777777], [907.0, 247.45454545454547], [909.0, 1067.0], [910.0, 253.58333333333334], [954.0, 788.8181818181819], [931.0, 1462.0000000000005], [929.0, 240.1558441558442], [928.0, 199.375], [930.0, 208.99999999999997], [943.0, 218.8], [942.0, 238.0], [934.0, 273.58536585365863], [933.0, 240.55555555555554], [932.0, 185.88888888888889], [935.0, 188.125], [953.0, 192.1764705882353], [952.0, 263.8], [955.0, 386.7857142857143], [957.0, 457.8823529411765], [958.0, 296.76470588235287], [959.0, 196.0], [936.0, 729.6], [938.0, 273.49999999999994], [937.0, 212.6086956521739], [939.0, 503.47058823529414], [940.0, 811.1153846153843], [941.0, 358.9285714285714], [944.0, 388.61538461538464], [945.0, 554.2666666666668], [946.0, 197.00000000000003], [947.0, 308.4137931034483], [950.0, 334.29629629629625], [949.0, 226.0], [948.0, 246.66666666666666], [951.0, 1068.1428571428569], [987.0, 211.0], [962.0, 1055.6666666666667], [960.0, 437.4285714285714], [961.0, 271.75], [975.0, 321.3333333333333], [965.0, 1518.7], [964.0, 255.83333333333331], [963.0, 260.03571428571433], [966.0, 1071.375], [969.0, 101.66666666666667], [968.0, 264.92307692307696], [970.0, 266.0], [971.0, 723.2], [973.0, 677.4666666666667], [972.0, 191.5238095238095], [974.0, 387.70000000000005], [977.0, 1300.0], [976.0, 226.4736842105263], [991.0, 301.0], [990.0, 242.27777777777777], [989.0, 216.62711864406785], [988.0, 248.20000000000005], [986.0, 224.97222222222223], [985.0, 243.0], [984.0, 269.14285714285717], [967.0, 107.0], [978.0, 1142.3333333333333], [981.0, 339.90000000000003], [980.0, 209.5], [979.0, 287.5714285714286], [983.0, 331.8974358974358], [982.0, 270.0], [993.0, 260.6753246753247], [992.0, 617.9000000000001], [994.0, 423.2857142857144], [996.0, 380.32558139534893], [997.0, 299.02222222222224], [998.0, 335.52272727272737], [999.0, 337.74436090225566], [1000.0, 588.5464776100195], [995.0, 284.33333333333337]], "isOverall": false, "label": "Resolve Short Url", "isController": false}, {"data": [[902.5087899255096, 489.64736144425336]], "isOverall": false, "label": "Resolve Short Url-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 154378.58333333334, "minX": 1.68106458E12, "maxY": 1133260.4166666667, "series": [{"data": [[1.68106458E12, 504477.4], [1.68106464E12, 1133260.4166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68106458E12, 154378.58333333334], [1.68106464E12, 343031.95]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68106464E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 289.5393509544123, "minX": 1.68106458E12, "maxY": 821.0236386449108, "series": [{"data": [[1.68106458E12, 821.0236386449108], [1.68106464E12, 289.5393509544123]], "isOverall": false, "label": "Shorten Url", "isController": false}, {"data": [[1.68106458E12, 819.2109708987864], [1.68106464E12, 344.07191773030513]], "isOverall": false, "label": "Resolve Short Url", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68106464E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 289.5372756505284, "minX": 1.68106458E12, "maxY": 821.017264742788, "series": [{"data": [[1.68106458E12, 821.017264742788], [1.68106464E12, 289.5372756505284]], "isOverall": false, "label": "Shorten Url", "isController": false}, {"data": [[1.68106458E12, 819.2069533865644], [1.68106464E12, 344.0691875412318]], "isOverall": false, "label": "Resolve Short Url", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68106464E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68106458E12, "maxY": 6.707653701380137, "series": [{"data": [[1.68106458E12, 6.707653701380137], [1.68106464E12, 0.0]], "isOverall": false, "label": "Shorten Url", "isController": false}, {"data": [[1.68106458E12, 0.0], [1.68106464E12, 0.0]], "isOverall": false, "label": "Resolve Short Url", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68106464E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 44.0, "minX": 1.68106458E12, "maxY": 15395.0, "series": [{"data": [[1.68106458E12, 6221.0], [1.68106464E12, 15395.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68106458E12, 45.0], [1.68106464E12, 44.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68106458E12, 1536.9000000000015], [1.68106464E12, 218.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68106458E12, 2008.9900000000016], [1.68106464E12, 405.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68106458E12, 139.0], [1.68106464E12, 90.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.68106458E12, 1791.0], [1.68106464E12, 286.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68106464E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 14.0, "minX": 4.0, "maxY": 3569.0, "series": [{"data": [[540.0, 1835.0], [519.0, 2377.0], [673.0, 2109.0], [701.0, 1294.0], [866.0, 827.5], [935.0, 704.0], [995.0, 821.0], [1035.0, 897.0], [1043.0, 578.0], [4.0, 66.0], [1144.0, 557.5], [1098.0, 84.0], [1202.0, 452.0], [1152.0, 162.5], [1215.0, 87.0], [1221.0, 306.0], [1292.0, 85.0], [1401.0, 124.0], [1376.0, 101.0], [1380.0, 102.5], [1469.0, 116.0], [1473.0, 760.0], [1496.0, 105.0], [1556.0, 105.0], [1545.0, 118.0], [1583.0, 650.0], [1587.0, 270.0], [1594.0, 94.0], [1627.0, 134.0], [1622.0, 109.0], [1688.0, 118.0], [1665.0, 517.0], [1710.0, 90.0], [1834.0, 113.0], [1817.0, 166.0], [1835.0, 230.0], [1832.0, 434.0], [1896.0, 120.0], [1879.0, 507.0], [1953.0, 169.0], [1940.0, 190.5], [2071.0, 397.0], [2153.0, 339.0], [2125.0, 208.0], [2105.0, 172.0], [2305.0, 94.0], [2484.0, 96.0], [2936.0, 84.0], [3057.0, 99.0], [3225.0, 106.0], [3639.0, 120.0], [3701.0, 250.0], [3850.0, 222.0], [4009.0, 89.0], [4468.0, 203.0], [4517.0, 230.0], [4544.0, 113.0], [4675.0, 215.0], [4852.0, 102.0], [4835.0, 97.0], [42.0, 3569.0], [210.0, 1427.5], [268.0, 3189.0], [399.0, 1645.0], [427.0, 1835.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3850.0, 14.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4852.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 14.0, "minX": 4.0, "maxY": 3568.5, "series": [{"data": [[540.0, 1835.0], [519.0, 2377.0], [673.0, 2109.0], [701.0, 1294.0], [866.0, 827.5], [935.0, 704.0], [995.0, 821.0], [1035.0, 897.0], [1043.0, 578.0], [4.0, 66.0], [1144.0, 557.5], [1098.0, 84.0], [1202.0, 452.0], [1152.0, 162.5], [1215.0, 87.0], [1221.0, 306.0], [1292.0, 85.0], [1401.0, 124.0], [1376.0, 101.0], [1380.0, 102.5], [1469.0, 116.0], [1473.0, 760.0], [1496.0, 105.0], [1556.0, 105.0], [1545.0, 118.0], [1583.0, 650.0], [1587.0, 270.0], [1594.0, 94.0], [1627.0, 134.0], [1622.0, 109.0], [1688.0, 118.0], [1665.0, 517.0], [1710.0, 90.0], [1834.0, 113.0], [1817.0, 166.0], [1835.0, 230.0], [1832.0, 434.0], [1896.0, 120.0], [1879.0, 507.0], [1953.0, 169.0], [1940.0, 190.5], [2071.0, 397.0], [2153.0, 339.0], [2125.0, 208.0], [2105.0, 172.0], [2305.0, 94.0], [2484.0, 96.0], [2936.0, 84.0], [3057.0, 99.0], [3225.0, 106.0], [3639.0, 120.0], [3701.0, 250.0], [3850.0, 222.0], [4009.0, 89.0], [4468.0, 203.0], [4517.0, 230.0], [4544.0, 113.0], [4675.0, 215.0], [4852.0, 102.0], [4835.0, 97.0], [42.0, 3568.5], [210.0, 1427.5], [268.0, 3189.0], [399.0, 1645.0], [427.0, 1835.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3850.0, 14.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4852.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 672.3333333333334, "minX": 1.68106458E12, "maxY": 1446.7, "series": [{"data": [[1.68106458E12, 672.3333333333334], [1.68106464E12, 1446.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68106464E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68106458E12, "maxY": 1463.35, "series": [{"data": [[1.68106458E12, 655.6666666666666], [1.68106464E12, 1463.35]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68106464E12, 0.016666666666666666]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68106464E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68106458E12, "maxY": 732.55, "series": [{"data": [[1.68106458E12, 332.0833333333333], [1.68106464E12, 730.8]], "isOverall": false, "label": "Shorten Url-success", "isController": false}, {"data": [[1.68106458E12, 323.5833333333333], [1.68106464E12, 732.55]], "isOverall": false, "label": "Resolve Short Url-success", "isController": false}, {"data": [[1.68106464E12, 0.016666666666666666]], "isOverall": false, "label": "Shorten Url-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68106464E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68106458E12, "maxY": 1463.35, "series": [{"data": [[1.68106458E12, 655.6666666666666], [1.68106464E12, 1463.35]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68106464E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68106464E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

